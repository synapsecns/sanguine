apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "synapse-node.fullname" . }}
  labels:
{{ include "synapse-node.labels" . | indent 4 }}
    {{- range $key, $value := .Values.labels }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
  annotations:
{{ toYaml .Values.annotations | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "synapse-node.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "synapse-node.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      {{- with .Values.podAnnotations }}
      annotations:
      {{- range $k, $v := . }}
        {{ $k }}: {{ $v | quote }}
      {{- end }}
      {{- end }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ template "synapse-node.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
    {{- if .Values.configurationFile }}
      initContainers:
        - name: copy-{{ .Release.Name }}-config
          image: busybox
          command: ['sh', '-c', 'cp /configmap/* /config/']
          volumeMounts:
            - name: configmap
              mountPath: /configmap
            - name: {{ .Release.Name }}-config
              mountPath: /config
    {{- end }}
      containers:
        - name: {{ .Release.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.runCommand }}
          command:
            {{  range .Values.runCommand }}
            - {{ . }}
            {{ end }}
          {{- end }}
          {{- if .Values.arguments }}
          args:
          {{- range .Values.arguments }}
            - {{ . }}
          {{- end }}
          {{- end }}
          {{- if or .Values.env .Values.secrets }}
          env:
          {{- range .Values.secrets }}
            - name: {{ .envName }}
              valueFrom:
                secretKeyRef:
                  name: {{ .secretName }}
                  key: {{ .secretKey }}
          {{- end }}
          {{- range .Values.env }}
            - name: {{ .name }}
              value: {{ .value }}
          {{- end }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: configmap
              mountPath: /config
          {{- if or .Values.service.enabled .Values.headless.enabled }}
          ports:
          {{- range .Values.service.ports }}
            - name: {{ default "porter" .name }}
              containerPort: {{ .targetPort }}
          {{- end }}
          {{- end }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        {{- if .Values.configurationFile }}
        - name: {{ .Release.Name }}-config
          emptyDir: {}
        {{- end }}
        - name: configmap
          configMap:
            name: {{ include "synapse-node.fullname" . }}-{{ .Release.Name }}
