apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "rfq.fullname" $ }}
  labels:
    {{- include "rfq.labels" $ | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "rfq.selectorLabels" $ | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "rfq.labels" $ | nindent 8 }}
    spec:
      {{- with $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "rfq.serviceAccountName" $ }}
      {{- if .Values.securityContext }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      {{- end }}
      {{- if .Values.extraInitContainers }}
      initContainers:
        {{- tpl (toYaml .Values.extraInitContainers) . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ $.Chart.Name }}
          securityContext:
            {{- toYaml $.Values.securityContext | nindent 12 }}
          image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag | default $.Chart.AppVersion }}"
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          args:
            {{- toYaml .Values.args | nindent 12 }}
          {{- if .Values.ports }}
          {{- range .Values.ports }}
          ports:
          - name: {{ .name }}
            containerPort: {{ .containerPort }}
            protocol: {{ .protocol }}
          {{- end }}
          {{- end }}
          {{- if .Values.resources }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.env }}
          env:
            {{- tpl (toYaml .Values.env) . | nindent 12 }}
          {{- end }}
          # livenessProbe:
          #   initialDelaySeconds: {{ $.Values.initialDelaySeconds }}
          #   failureThreshold: 5
          #   timeoutSeconds: 30
          #   httpGet:
          #     path: /health-check
          #     port: http
          # readinessProbe:
          #   failureThreshold: 5
          #   initialDelaySeconds: {{ $.Values.initialDelaySeconds }}
          #   timeoutSeconds: 30
          #   httpGet:
          #     path: /health-check
          #     port: http
          {{- if .Values.files }}
          volumeMounts:
            - name: config
              mountPath: /config
          {{- end }}
        {{- if .Values.extraContainers }}
        {{- toYaml .Values.extraContainers | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.files }}
      volumes:
        - name: config
          configMap:
            name: {{ include "rfq.fullname" $ }}
      {{- end }}
