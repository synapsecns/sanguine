# Default values for explorer.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/synapsecns/sanguine/explorer
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
labels: {}

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 80

initialDelaySeconds: 20

ingress:
  enabled: false
  className: ""
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
#   cpu: 100m
#   memory: 128Mi
omnirpc:
  # this can be remote in production, we just want to use the public rpc servers here
  enabled: true
  fullnameOverride: explorer-omnirpc
  replicaCount: 2


clickhouse:
  enabled: true
  ingress:
    enabled: true
  clickhouse:
    replicas: "1"
    imageVersion: "latest"
    configmap:
      remote_servers:
        internal_replication: true
        replica:
          backup:
            enabled: false
      users:
        enabled: true
        user:
          - name: default
            config:
              password: "clickhouse"
              networks:
                - ::/0
              profile: default
              quota: default

    persistentVolumeClaim:
      enabled: true
      dataPersistentVolume:
        enabled: true
        accessModes:
          - "ReadWriteOnce"
        storage: "30Gi"

indexer:
  enabled: true
  podAnnotations: {}
  nodeSelector: {}
  podSecurityContext: {}
  affinity: {}
  args:
    - backfill
    - '--address=clickhouse://default:clickhouse@{{ .Release.Namespace }}-clickhouse:9000'
    - '--config=/config/config.yaml'
  ports: []
  env:
    - name: POD_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: GOLOG_LOG_FMT
      value: "json"
  tolerations: {}
  # TODO: this should be in extraValues for testing
  extraInitContainers:
    - name: wait-for-omnirpc
      image: busybox:latest
      imagePullPolicy: IfNotPresent
      command: ['sh', '-c', 'until nc -vz ${POD_NAME}.${POD_NAMESPACE} 80; do echo "Waiting for omnirpc..."; sleep 1; done;']
      env:
        - name: POD_NAME
          value: explorer-omnirpc
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
    - name: wait-for-clickhouse
      image: busybox:latest
      imagePullPolicy: IfNotPresent
      command: ['sh', '-c', 'until nc -vz ${POD_NAMESPACE}-clickhouse 9000; do echo "Waiting for clickhouse..."; sleep 1; done;']
      env:
        - name: POD_NAME
          value: explorer-clickhouse
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace


server:
  enabled: true
  # For testing only
  replicaCount: 1
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
  podAnnotations: {}
  nodeSelector: {}
  podSecurityContext: {}
  affinity: {}
  env:
    - name: POD_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: GOLOG_LOG_FMT
      value: "json"
  tolerations: []
  args:
    - server
    - '--port=5080'
    - '--scribe-url=https://scribe.interoperability.institute/graphql'
    - '--address=tcp://default:clickhouse@{{ .Release.Namespace }}-clickhouse:9000'
  ports:
    - name: http
      containerPort: 5080
      protocol: TCP
  # TODO: this should be in extraValues for testing
  extraInitContainers:
    - name: wait-for-omnirpc
      image: busybox:latest
      imagePullPolicy: IfNotPresent
      command: ['sh', '-c', 'until nc -vz ${POD_NAME}.${POD_NAMESPACE} 80; do echo "Waiting for omnirpc..."; sleep 1; done;']
      env:
        - name: POD_NAME
          value: explorer-omnirpc
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
    - name: wait-for-clickhouse
      image: busybox:latest
      imagePullPolicy: IfNotPresent
      command: ['sh', '-c', 'until nc -vz ${POD_NAMESPACE}-clickhouse 9000; do echo "Waiting for clickhouse..."; sleep 1; done;']
      env:
        - name: POD_NAME
          value: explorer-clickhouse
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace


files:
  config.yaml: |-
    # Production config example
    refresh_rate: 1
    scribe_url: https://scribe.interoperability.institute/graphql
    rpc_url: https://rpc.interoperability.institute/confirmations/1/rpc/
    bridge_config_address: 0x5217c83ca75559B1f8a8803824E5b7ac233A12a1
    bridge_config_chain_id: 1
    chains:
    - chain_id: 1
      fetch_block_increment: 1000
      max_goroutines: 10
      contracts:
        - contract_type: bridge
          address: 0x2796317b0fF8538F253012862c06787Adfb8cEb6
          start_block: 15930000
