# Use the structure from this file in the .env of the package that is using solidity-devops

# Wallets
# Define as many wallets as needed. For every wallet following env vars are needed:
# - WALLET_ADDR: the address of the account to use for signing
# - WALLET_TYPE: the wallet type: "keystore", "ledger","trezor" or "pk".
# Any other value triggers the interactive prompt to enter the private key.
#   - keystore: use the encrypted keystore file.
#       - WALLET_JSON: the keystore file path
#   - ledger, trezor: use HW wallet for signing
#       TODO: find out if ledger/trezor specific options are needed
#   - pk: use the plaintext private key. STRONGLY DISCOURAGED for production usage, meant for local devnet purposes.
#       - WALLET_PK: the private key to the wallet in 0x format.

# This will make wallet with name "deployer" available to run the scripts:
DEPLOYER_ADDR=0x1234567890123456789012345678901234567890
DEPLOYER_TYPE=keystore
DEPLOYER_JSON=path/to/keystore.json

# Chains
# For every chain following env vars are needed:
# - CHAIN_RPC: the RPC endpoint
# - CHAIN_VERIFIER: verifier for the smart contracts. Possible values are: etherscan, blockscout, sourcify
# - CHAIN_VERIFIER_URL: the Verifier API endpoint (required if verifier is not sourcify)
# - CHAIN_VERIFIER_KEY: the Verifier API key (required if verifier is not sourcify)
#   NOTE: Blockcout URL needs to end with "api?" for the verification to work
#   NOTE: Use any non-empty string for Blockscout API key: it is not required per se, but foundry will complain if it's empty

# MAINNET CHAINS
# Arbitrum
ARBITRUM_RPC=https://arb1.arbitrum.io/rpc
ARBITRUM_VERIFIER=etherscan
ARBITRUM_VERIFIER_URL=https://api.arbiscan.io/api
ARBITRUM_VERIFIER_KEY=YourArbiscanKey
# Base
BASE_RPC=https://base.llamarpc.com
BASE_VERIFIER=etherscan
BASE_VERIFIER_URL=https://api.basescan.org/api
BASE_VERIFIER_KEY=YourBaseScanKey
# BNB
BNB_RPC=https://bnb.api.onfinality.io/public
BNB_VERIFIER=etherscan
BNB_VERIFIER_URL=https://api.bscscan.com/api
BNB_VERIFIER_KEY=YourBscScanKey
# Mainnet
MAINNET_RPC=https://eth.llamarpc.com
MAINNET_VERIFIER=etherscan
MAINNET_VERIFIER_URL=https://api.etherscan.io/api
MAINNET_VERIFIER_KEY=YourEtherscanKey
# Optimism
OPTIMISM_RPC=https://optimism.llamarpc.com
OPTIMISM_VERIFIER=etherscan
OPTIMISM_VERIFIER_URL=https://api-optimistic.etherscan.io/api
OPTIMISM_VERIFIER_KEY=YourOptimisticEtherscanKey
# Scroll
SCROLL_RPC=https://rpc.scroll.io
SCROLL_VERIFIER=etherscan
SCROLL_VERIFIER_URL=https://api.scrollscan.com/api
SCROLL_VERIFIER_KEY=YourScrollScanKey

# TESTNET CHAINS
# Arbitrum Sepolia
ARB_SEPOLIA_RPC=https://arbitrum-sepolia.blockpi.network/v1/rpc/public
ARB_SEPOLIA_VERIFIER=etherscan
ARB_SEPOLIA_VERIFIER_URL=https://api-sepolia.arbiscan.io/api
ARB_SEPOLIA_VERIFIER_KEY=YourArbiScanKey
# Base Sepolia
BASE_SEPOLIA_RPC=https://base-sepolia.blockpi.network/v1/rpc/public
BASE_SEPOLIA_VERIFIER=etherscan
BASE_SEPOLIA_VERIFIER_URL=https://api-sepolia.basescan.org/api
BASE_SEPOLIA_VERIFIER_KEY=YourBaseScanKey
# BNB Testnet
BNB_TESTNET_RPC=https://bsc-testnet.blockpi.network/v1/rpc/public
BNB_TESTNET_VERIFIER=etherscan
BNB_TESTNET_VERIFIER_URL=https://api-testnet.bscscan.com/api
BNB_TESTNET_VERIFIER_KEY=YourBscScanKey
# Ethereum Sepolia
ETH_SEPOLIA_RPC=https://ethereum-sepolia.blockpi.network/v1/rpc/public
ETH_SEPOLIA_VERIFIER=etherscan
ETH_SEPOLIA_VERIFIER_URL=https://api-sepolia.etherscan.io/api
ETH_SEPOLIA_VERIFIER_KEY=YourEtherScanKey
# Optimism Sepolia
OP_SEPOLIA_RPC=https://optimism-sepolia.blockpi.network/v1/rpc/public
OP_SEPOLIA_VERIFIER=etherscan
OP_SEPOLIA_VERIFIER_URL=https://api-sepolia-optimistic.etherscan.io/api
OP_SEPOLIA_VERIFIER_KEY=YourOptimismEtherScanKey
# Scroll Sepolia
SCROLL_SEPOLIA_RPC=https://scroll-sepolia.blockpi.network/v1/rpc/public
SCROLL_SEPOLIA_VERIFIER=etherscan
SCROLL_SEPOLIA_VERIFIER_URL=https://api-sepolia.scrollscan.com/api
SCROLL_SEPOLIA_VERIFIER_KEY=YourScrollScanKey
