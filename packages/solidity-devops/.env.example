# Use the structure from this file in the .env of the package that is using solidity-devops

# Wallets
# Define as many wallets as needed. For every wallet following env vars are needed:
# - WALLET_ADDR: the address of the account to use for signing
# - WALLET_TYPE: the wallet type: "keystore", "ledger","trezor" or "pk".
# Any other value triggers the interactive prompt to enter the private key.
#   - keystore: use the encrypted keystore file.
#       - WALLET_JSON: the keystore file path
#   - ledger, trezor: use HW wallet for signing
#       TODO: find out if ledger/trezor specific options are needed
#   - pk: use the plaintext private key. STRONGLY DISCOURAGED for production usage, meant for local devnet purposes.
#       - WALLET_PK: the private key to the wallet in 0x format.

# This will make wallet with name "deployer" available to run the scripts:
DEPLOYER_ADDR=0x1234567890123456789012345678901234567890
DEPLOYER_TYPE=keystore
DEPLOYER_JSON=path/to/keystore.json

# Chains
# For every chain following env vars are needed:
# - CHAIN_RPC: the RPC endpoint
# - CHAIN_VERIFIER: verifier for the smart contracts. Possible values are: etherscan, blockscout, sourcify
# - CHAIN_VERIFIER_URL: the Verifier API endpoint (required if verifier is not sourcify)
# - CHAIN_VERIFIER_KEY: the Verifier API key (required if verifier is not sourcify)
#   NOTE: Blockcout URL needs to end with "api?" for the verification to work
#   NOTE: Use any non-empty string for Blockscout API key: it is not required per se, but foundry will complain if it's empty

# MAINNET CHAINS
# Arbitrum
ARBITRUM_RPC=https://arb1.arbitrum.io/rpc
ARBITRUM_VERIFIER=etherscan
ARBITRUM_VERIFIER_URL=https://api.arbiscan.io/api
ARBITRUM_VERIFIER_KEY=PasteYourOwnKeyPlease
# Aurora
AURORA_RPC=https://mainnet.aurora.dev
AURORA_VERIFIER=blockscout
AURORA_VERIFIER_URL=https://explorer.aurora.dev/api?
AURORA_VERIFIER_KEY=NoKeyRequired
# DFK
DFK_RPC=https://subnets.avax.network/defi-kingdoms/dfk-chain/rpc
DFK_VERIFIER=sourcify
# And the list goes on

# TESTNET CHAINS
# TODO: add testnet chains
