// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// Permitter is an autogenerated mock type for the Permitter type
type Permitter struct {
	mock.Mock
}

// AcquirePermit provides a mock function with given fields: ctx
func (_m *Permitter) AcquirePermit(ctx context.Context) error {
	ret := _m.Called(ctx)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ReleasePermit provides a mock function with given fields:
func (_m *Permitter) ReleasePermit() {
	_m.Called()
}

type mockConstructorTestingTNewPermitter interface {
	mock.TestingT
	Cleanup(func())
}

// NewPermitter creates a new instance of Permitter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewPermitter(t mockConstructorTestingTNewPermitter) *Permitter {
	mock := &Permitter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
