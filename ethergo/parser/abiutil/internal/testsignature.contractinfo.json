{"/solidity/testsignature.sol:TestSignature":{"code":"0x608060405234801561001057600080fd5b506105c8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c806347e8da23116100765780635b7c30ae1161005b5780635b7c30ae14610174578063accf647a146101a9578063e65ca4c6146101bc57600080fd5b806347e8da231461013b578063550875621461016157600080fd5b806304c85137146100a8578063274d69e2146100aa578063410bbd14146100bd5780634408b95014610128575b600080fd5b005b6100a86100b836600461035d565b6101f1565b6100f36100cb366004610484565b7f410bbd143686b95f03d142e907aa4b466d4425b0ce24588b25a67e9d337b932b9392505050565b6040517fffffffff00000000000000000000000000000000000000000000000000000000909116815260200160405180910390f35b6100a8610136366004610463565b61023a565b7f47e8da23000000000000000000000000000000000000000000000000000000006100f3565b6100a861016f366004610463565b610278565b6100f3610182366004610463565b7f5b7c30ae23c9735566e0743e19b37f3f9c77ddcf1c951d97b5639c99c1275bd092915050565b6100a86101b7366004610332565b6102ae565b6100f36101ca366004610463565b7fe65ca4c60000000000000000000000000000000000000000000000000000000092915050565b7f9f7f45ca39ab80dfeef5185b1ba33c124182db7dafa476641b34320fa89ff9e186868686868660405161022a969594939291906104af565b60405180910390a1505050505050565b60408051838152602081018390527f205e2e7b2a41eb57b9509e69da21695e50dc3dacb5cfbc61093598333942fd1991015b60405180910390a15050565b60408051838152602081018390527fc507a38789b2c7b7938013024429cfbc83ff4f7c9e19288999d58eaf5d109001910161026c565b6040805183815273ffffffffffffffffffffffffffffffffffffffff831660208201527fb9f2bf7d397a5ef5ef21d51afd43b77c7fb8f0b0d6cd7a89be8c03a7a3d6665d910161026c565b803573ffffffffffffffffffffffffffffffffffffffff8116811461031d57600080fd5b919050565b8035801515811461031d57600080fd5b60008060408385031215610344578182fd5b82359150610354602084016102f9565b90509250929050565b60008060008060008060c08789031215610375578182fd5b86359550610385602088016102f9565b94506040870135935060608701359250608087013567ffffffffffffffff808211156103af578384fd5b818901915089601f8301126103c2578384fd5b8135818111156103d4576103d4610563565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561041a5761041a610563565b816040528281528c6020848701011115610432578687fd5b8260208601602083013791820160200195909552935061045791505060a08801610322565b90509295509295509295565b60008060408385031215610475578182fd5b50508035926020909101359150565b600080600060608486031215610498578283fd5b505081359360208301359350604090920135919050565b8681526000602073ffffffffffffffffffffffffffffffffffffffff88168184015286604084015285606084015260c0608084015284518060c0850152825b8181101561050a5786810183015185820160e0015282016104ee565b8181111561051b578360e083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016830160e0019150610558905060a083018415159052565b979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea264697066735822122086d1a866ac75dd5414552b96ea0aefe73d2050c728428c3d486caa500199d80764736f6c63430008040033","runtime-code":"0x608060405234801561001057600080fd5b50600436106100a35760003560e01c806347e8da23116100765780635b7c30ae1161005b5780635b7c30ae14610174578063accf647a146101a9578063e65ca4c6146101bc57600080fd5b806347e8da231461013b578063550875621461016157600080fd5b806304c85137146100a8578063274d69e2146100aa578063410bbd14146100bd5780634408b95014610128575b600080fd5b005b6100a86100b836600461035d565b6101f1565b6100f36100cb366004610484565b7f410bbd143686b95f03d142e907aa4b466d4425b0ce24588b25a67e9d337b932b9392505050565b6040517fffffffff00000000000000000000000000000000000000000000000000000000909116815260200160405180910390f35b6100a8610136366004610463565b61023a565b7f47e8da23000000000000000000000000000000000000000000000000000000006100f3565b6100a861016f366004610463565b610278565b6100f3610182366004610463565b7f5b7c30ae23c9735566e0743e19b37f3f9c77ddcf1c951d97b5639c99c1275bd092915050565b6100a86101b7366004610332565b6102ae565b6100f36101ca366004610463565b7fe65ca4c60000000000000000000000000000000000000000000000000000000092915050565b7f9f7f45ca39ab80dfeef5185b1ba33c124182db7dafa476641b34320fa89ff9e186868686868660405161022a969594939291906104af565b60405180910390a1505050505050565b60408051838152602081018390527f205e2e7b2a41eb57b9509e69da21695e50dc3dacb5cfbc61093598333942fd1991015b60405180910390a15050565b60408051838152602081018390527fc507a38789b2c7b7938013024429cfbc83ff4f7c9e19288999d58eaf5d109001910161026c565b6040805183815273ffffffffffffffffffffffffffffffffffffffff831660208201527fb9f2bf7d397a5ef5ef21d51afd43b77c7fb8f0b0d6cd7a89be8c03a7a3d6665d910161026c565b803573ffffffffffffffffffffffffffffffffffffffff8116811461031d57600080fd5b919050565b8035801515811461031d57600080fd5b60008060408385031215610344578182fd5b82359150610354602084016102f9565b90509250929050565b60008060008060008060c08789031215610375578182fd5b86359550610385602088016102f9565b94506040870135935060608701359250608087013567ffffffffffffffff808211156103af578384fd5b818901915089601f8301126103c2578384fd5b8135818111156103d4576103d4610563565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561041a5761041a610563565b816040528281528c6020848701011115610432578687fd5b8260208601602083013791820160200195909552935061045791505060a08801610322565b90509295509295509295565b60008060408385031215610475578182fd5b50508035926020909101359150565b600080600060608486031215610498578283fd5b505081359360208301359350604090920135919050565b8681526000602073ffffffffffffffffffffffffffffffffffffffff88168184015286604084015285606084015260c0608084015284518060c0850152825b8181101561050a5786810183015185820160e0015282016104ee565b8181111561051b578360e083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016830160e0019150610558905060a083018415159052565b979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea264697066735822122086d1a866ac75dd5414552b96ea0aefe73d2050c728428c3d486caa500199d80764736f6c63430008040033","info":{"source":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\ncontract TestSignature {\n    /**\n     * @dev Returns the signature of the function `testSignature()`.\n     *\n     * This is a public function that is not present in the contract ABI. It is\n     * used to test that the signature of a function is correctly computed.\n     */\n    function testSignature() public pure returns (bytes4) {\n        return this.testSignature.selector;\n    }\n\n    /**\n    * @dev Returns the signature of the function `testSignatureArgs(int, int)`.\n    *\n    * This is a public function that is not present in the contract ABI. It is\n    * used to test that the signature of a function is correctly computed.\n    */\n    function testSignatureArgs(int a, int b) public pure returns (bytes4) {\n        return this.testSignatureArgs.selector;\n    }\n\n    /**\n    * @dev Returns the signature of the function `testSignatureOverload(int, int)`.\n    *\n    */\n    function testSignatureOverload(int a, int b) public pure returns (bytes4) {\n        return bytes4(keccak256(\"testSignatureOverload(int256,int256)\"));\n    }\n\n    /**\n    * @dev Returns the signature of the function `testSignatureOverload(int, int, int)`.\n    *\n    */\n    function testSignatureOverload(int a, int b, int c) public pure returns (bytes4) {\n        return bytes4(keccak256(\"testSignatureOverload(int256,int256,int256)\"));\n    }\n\n    // ============ Modifiers ============\n\n    function doSomethingWithoutParams() external  {\n        // I have no params!\n    }\n\n    event SomethingHappened(int a, int b);\n\n    /**\n    * @dev Returns the signature of the function `testSignatureOverload(int, int)`.\n    *\n    */\n    function doSomething(int a, int b) external {\n        emit SomethingHappened(a, b);\n    }\n\n\n    event SomethingHappenedOverload0(int a, int b);\n\n    /**\n    * @dev Overload of `doSomething(int, int)`.\n    *\n    */\n    function doSomethingOverload(int a, int b) external {\n        emit SomethingHappenedOverload0(a, b);\n    }\n\n    event SomethingHappenedOverload1(int a, address b);\n\n    /**\n    * @dev Overload of `doSomethingOverload(int, int)`.\n    *\n    */\n    function doSomethingOverload(int a, address b) external {\n        emit SomethingHappenedOverload1(a, b);\n    }\n\n    event SomethingHappenedManyTypes(\n        int a,\n        address b,\n        uint256 c,\n        bytes32 d,\n        bytes e,\n        bool f\n    );\n\n    function doSomethingManyTypes(\n        int a,\n        address b,\n        uint256 c,\n        bytes32 d,\n        bytes memory e,\n        bool f\n    ) external  {\n        emit SomethingHappenedManyTypes(a, b, c, d, e, f);\n    }\n}\n","language":"Solidity","languageVersion":"0.8.4","compilerVersion":"0.8.4","compilerOptions":"--combined-json bin,bin-runtime,srcmap,srcmap-runtime,abi,userdoc,devdoc,metadata,hashes --optimize --optimize-runs 10000 --allow-paths ., ./, ../","srcMap":"57:2562:0:-:0;;;;;;;;;;;;;;;;;;;","srcMapRuntime":"57:2562:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1426:82;;2393:224;;;;;;:::i;:::-;;:::i;1207:169::-;;;;;;:::i;:::-;1312:56;1207:169;;;;;;;;;2885:66:1;2873:79;;;2855:98;;2843:2;2828:18;1207:169:0;;;;;;;1663:89;;;;;;:::i;:::-;;:::i;334:105::-;405:27;334:105;;1881:106;;;;;;:::i;:::-;;:::i;936:155::-;;;;;;:::i;:::-;1034:49;936:155;;;;;2127:110;;;;;;:::i;:::-;;:::i;700:125::-;;;;;;:::i;:::-;787:31;700:125;;;;;2393:224;2566:44;2593:1;2596;2599;2602;2605;2608;2566:44;;;;;;;;;;;:::i;:::-;;;;;;;;2393:224;;;;;;:::o;1663:89::-;1722:23;;;4511:25:1;;;4567:2;4552:18;;4545:34;;;1722:23:0;;4484:18:1;1722:23:0;;;;;;;;1663:89;;:::o;1881:106::-;1948:32;;;4511:25:1;;;4567:2;4552:18;;4545:34;;;1948:32:0;;4484:18:1;1948:32:0;4466:119:1;2127:110:0;2198:32;;;3136:25:1;;;3209:42;3197:55;;3192:2;3177:18;;3170:83;2198:32:0;;3109:18:1;2198:32:0;3091:168:1;14:196;82:20;;142:42;131:54;;121:65;;111:2;;200:1;197;190:12;111:2;63:147;;;:::o;215:160::-;280:20;;336:13;;329:21;319:32;;309:2;;365:1;362;355:12;380:263;447:6;455;508:2;496:9;487:7;483:23;479:32;476:2;;;529:6;521;514:22;476:2;570:9;557:23;547:33;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;466:177;;;;;:::o;648:1373::-;757:6;765;773;781;789;797;850:3;838:9;829:7;825:23;821:33;818:2;;;872:6;864;857:22;818:2;913:9;900:23;890:33;;942:38;976:2;965:9;961:18;942:38;:::i;:::-;932:48;;1027:2;1016:9;1012:18;999:32;989:42;;1078:2;1067:9;1063:18;1050:32;1040:42;;1133:3;1122:9;1118:19;1105:33;1157:18;1198:2;1190:6;1187:14;1184:2;;;1219:6;1211;1204:22;1184:2;1262:6;1251:9;1247:22;1237:32;;1307:7;1300:4;1296:2;1292:13;1288:27;1278:2;;1334:6;1326;1319:22;1278:2;1375;1362:16;1397:2;1393;1390:10;1387:2;;;1403:18;;:::i;:::-;1537:2;1531:9;1599:4;1591:13;;1442:66;1587:22;;;1611:2;1583:31;1579:40;1567:53;;;1635:18;;;1655:22;;;1632:46;1629:2;;;1681:18;;:::i;:::-;1721:10;1717:2;1710:22;1756:2;1748:6;1741:18;1796:7;1791:2;1786;1782;1778:11;1774:20;1771:33;1768:2;;;1822:6;1814;1807:22;1768:2;1883;1878;1874;1870:11;1865:2;1857:6;1853:15;1840:46;1906:15;;;1923:2;1902:24;1895:40;;;;1910:6;-1:-1:-1;1979:36:1;;-1:-1:-1;;2010:3:1;1995:19;;1979:36;:::i;:::-;1969:46;;808:1213;;;;;;;;:::o;2026:256::-;2092:6;2100;2153:2;2141:9;2132:7;2128:23;2124:32;2121:2;;;2174:6;2166;2159:22;2121:2;-1:-1:-1;;2202:23:1;;;2272:2;2257:18;;;2244:32;;-1:-1:-1;2111:171:1:o;2287:323::-;2361:6;2369;2377;2430:2;2418:9;2409:7;2405:23;2401:32;2398:2;;;2451:6;2443;2436:22;2398:2;-1:-1:-1;;2479:23:1;;;2549:2;2534:18;;2521:32;;-1:-1:-1;2600:2:1;2585:18;;;2572:32;;2388:222;-1:-1:-1;2388:222:1:o;3264:1072::-;3543:6;3532:9;3525:25;3506:4;3569:2;3619:42;3611:6;3607:55;3602:2;3591:9;3587:18;3580:83;3699:6;3694:2;3683:9;3679:18;3672:34;3742:6;3737:2;3726:9;3722:18;3715:34;3786:3;3780;3769:9;3765:19;3758:32;3819:6;3813:13;3863:6;3857:3;3846:9;3842:19;3835:35;3888:4;3901:141;3915:6;3912:1;3909:13;3901:141;;;4011:14;;;4007:23;;4001:30;3976:17;;;3995:3;3972:27;3965:67;3930:10;;3901:141;;;4060:6;4057:1;4054:13;4051:2;;;4131:4;4125:3;4116:6;4105:9;4101:22;4097:32;4090:46;4051:2;-1:-1:-1;4198:2:1;4186:15;4203:66;4182:88;4167:104;;4273:3;4163:114;;-1:-1:-1;4286:44:1;;-1:-1:-1;4325:3:1;4310:19;;4302:6;2685:13;2678:21;2666:34;;2656:50;4286:44;3515:821;;;;;;;;;:::o;4590:184::-;4642:77;4639:1;4632:88;4739:4;4736:1;4729:15;4763:4;4760:1;4753:15","abiDefinition":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"int256","name":"a","type":"int256"},{"indexed":false,"internalType":"int256","name":"b","type":"int256"}],"name":"SomethingHappened","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"int256","name":"a","type":"int256"},{"indexed":false,"internalType":"address","name":"b","type":"address"},{"indexed":false,"internalType":"uint256","name":"c","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"d","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"e","type":"bytes"},{"indexed":false,"internalType":"bool","name":"f","type":"bool"}],"name":"SomethingHappenedManyTypes","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"int256","name":"a","type":"int256"},{"indexed":false,"internalType":"int256","name":"b","type":"int256"}],"name":"SomethingHappenedOverload0","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"int256","name":"a","type":"int256"},{"indexed":false,"internalType":"address","name":"b","type":"address"}],"name":"SomethingHappenedOverload1","type":"event"},{"inputs":[{"internalType":"int256","name":"a","type":"int256"},{"internalType":"int256","name":"b","type":"int256"}],"name":"doSomething","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"int256","name":"a","type":"int256"},{"internalType":"address","name":"b","type":"address"},{"internalType":"uint256","name":"c","type":"uint256"},{"internalType":"bytes32","name":"d","type":"bytes32"},{"internalType":"bytes","name":"e","type":"bytes"},{"internalType":"bool","name":"f","type":"bool"}],"name":"doSomethingManyTypes","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"int256","name":"a","type":"int256"},{"internalType":"int256","name":"b","type":"int256"}],"name":"doSomethingOverload","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"int256","name":"a","type":"int256"},{"internalType":"address","name":"b","type":"address"}],"name":"doSomethingOverload","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"doSomethingWithoutParams","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"testSignature","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"int256","name":"a","type":"int256"},{"internalType":"int256","name":"b","type":"int256"}],"name":"testSignatureArgs","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"int256","name":"a","type":"int256"},{"internalType":"int256","name":"b","type":"int256"},{"internalType":"int256","name":"c","type":"int256"}],"name":"testSignatureOverload","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"int256","name":"a","type":"int256"},{"internalType":"int256","name":"b","type":"int256"}],"name":"testSignatureOverload","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"pure","type":"function"}],"userDoc":{"kind":"user","methods":{},"version":1},"developerDoc":{"kind":"dev","methods":{"doSomething(int256,int256)":{"details":"Returns the signature of the function `testSignatureOverload(int, int)`."},"doSomethingOverload(int256,address)":{"details":"Overload of `doSomethingOverload(int, int)`."},"doSomethingOverload(int256,int256)":{"details":"Overload of `doSomething(int, int)`."},"testSignature()":{"details":"Returns the signature of the function `testSignature()`. This is a public function that is not present in the contract ABI. It is used to test that the signature of a function is correctly computed."},"testSignatureArgs(int256,int256)":{"details":"Returns the signature of the function `testSignatureArgs(int, int)`. This is a public function that is not present in the contract ABI. It is used to test that the signature of a function is correctly computed."},"testSignatureOverload(int256,int256)":{"details":"Returns the signature of the function `testSignatureOverload(int, int)`."},"testSignatureOverload(int256,int256,int256)":{"details":"Returns the signature of the function `testSignatureOverload(int, int, int)`."}},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"a\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"b\",\"type\":\"int256\"}],\"name\":\"SomethingHappened\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"a\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"b\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"c\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"d\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"e\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"f\",\"type\":\"bool\"}],\"name\":\"SomethingHappenedManyTypes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"a\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"b\",\"type\":\"int256\"}],\"name\":\"SomethingHappenedOverload0\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"a\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"b\",\"type\":\"address\"}],\"name\":\"SomethingHappenedOverload1\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"a\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"b\",\"type\":\"int256\"}],\"name\":\"doSomething\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"a\",\"type\":\"int256\"},{\"internalType\":\"address\",\"name\":\"b\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"c\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"d\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"e\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"f\",\"type\":\"bool\"}],\"name\":\"doSomethingManyTypes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"a\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"b\",\"type\":\"int256\"}],\"name\":\"doSomethingOverload\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"a\",\"type\":\"int256\"},{\"internalType\":\"address\",\"name\":\"b\",\"type\":\"address\"}],\"name\":\"doSomethingOverload\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"doSomethingWithoutParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"a\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"b\",\"type\":\"int256\"}],\"name\":\"testSignatureArgs\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"a\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"b\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"c\",\"type\":\"int256\"}],\"name\":\"testSignatureOverload\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"a\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"b\",\"type\":\"int256\"}],\"name\":\"testSignatureOverload\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"doSomething(int256,int256)\":{\"details\":\"Returns the signature of the function `testSignatureOverload(int, int)`.\"},\"doSomethingOverload(int256,address)\":{\"details\":\"Overload of `doSomethingOverload(int, int)`.\"},\"doSomethingOverload(int256,int256)\":{\"details\":\"Overload of `doSomething(int, int)`.\"},\"testSignature()\":{\"details\":\"Returns the signature of the function `testSignature()`. This is a public function that is not present in the contract ABI. It is used to test that the signature of a function is correctly computed.\"},\"testSignatureArgs(int256,int256)\":{\"details\":\"Returns the signature of the function `testSignatureArgs(int, int)`. This is a public function that is not present in the contract ABI. It is used to test that the signature of a function is correctly computed.\"},\"testSignatureOverload(int256,int256)\":{\"details\":\"Returns the signature of the function `testSignatureOverload(int, int)`.\"},\"testSignatureOverload(int256,int256,int256)\":{\"details\":\"Returns the signature of the function `testSignatureOverload(int, int, int)`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/solidity/testsignature.sol\":\"TestSignature\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"/solidity/testsignature.sol\":{\"keccak256\":\"0xd60ecc9927d63534b5dc5d05b96be0513ae3d8957bda3d133ac3e302ff1cfa20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18940ca337a606c912efdadbca4ec48f76dac490e4178e1d95a74ce21a277718\",\"dweb:/ipfs/QmNfvkVecYFAtKUvGmyWH29GdaDCL7qF5RNDnqRcJcfvxb\"]}},\"version\":1}"},"hashes":{"doSomething(int256,int256)":"4408b950","doSomethingManyTypes(int256,address,uint256,bytes32,bytes,bool)":"274d69e2","doSomethingOverload(int256,address)":"accf647a","doSomethingOverload(int256,int256)":"55087562","doSomethingWithoutParams()":"04c85137","testSignature()":"47e8da23","testSignatureArgs(int256,int256)":"e65ca4c6","testSignatureOverload(int256,int256)":"5b7c30ae","testSignatureOverload(int256,int256,int256)":"410bbd14"}}}