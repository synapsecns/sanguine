// autogenerated file

package swap

import (
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// ISwapFlashLoanFilterer ...
type ISwapFlashLoanFilterer interface {
	// FilterAddLiquidity is a free log retrieval operation binding the contract event 0x189c623b666b1b45b83d7178f39b8c087cb09774317ca2f53c2d3c3726f222a2.
	//
	// Solidity: event AddLiquidity(address indexed provider, uint256[] tokenAmounts, uint256[] fees, uint256 invariant, uint256 lpTokenSupply)
	FilterAddLiquidity(opts *bind.FilterOpts, provider []common.Address) (*SwapFlashLoanAddLiquidityIterator, error)
	// WatchAddLiquidity is a free log subscription operation binding the contract event 0x189c623b666b1b45b83d7178f39b8c087cb09774317ca2f53c2d3c3726f222a2.
	//
	// Solidity: event AddLiquidity(address indexed provider, uint256[] tokenAmounts, uint256[] fees, uint256 invariant, uint256 lpTokenSupply)
	WatchAddLiquidity(opts *bind.WatchOpts, sink chan<- *SwapFlashLoanAddLiquidity, provider []common.Address) (event.Subscription, error)
	// ParseAddLiquidity is a log parse operation binding the contract event 0x189c623b666b1b45b83d7178f39b8c087cb09774317ca2f53c2d3c3726f222a2.
	//
	// Solidity: event AddLiquidity(address indexed provider, uint256[] tokenAmounts, uint256[] fees, uint256 invariant, uint256 lpTokenSupply)
	ParseAddLiquidity(log types.Log) (*SwapFlashLoanAddLiquidity, error)
	// FilterFlashLoan is a free log retrieval operation binding the contract event 0x7c186b2827b23e9024e7b29869cba58a97a4bac6567802a8ea6a8afa7b8c22f0.
	//
	// Solidity: event FlashLoan(address indexed receiver, uint8 tokenIndex, uint256 amount, uint256 amountFee, uint256 protocolFee)
	FilterFlashLoan(opts *bind.FilterOpts, receiver []common.Address) (*SwapFlashLoanFlashLoanIterator, error)
	// WatchFlashLoan is a free log subscription operation binding the contract event 0x7c186b2827b23e9024e7b29869cba58a97a4bac6567802a8ea6a8afa7b8c22f0.
	//
	// Solidity: event FlashLoan(address indexed receiver, uint8 tokenIndex, uint256 amount, uint256 amountFee, uint256 protocolFee)
	WatchFlashLoan(opts *bind.WatchOpts, sink chan<- *SwapFlashLoanFlashLoan, receiver []common.Address) (event.Subscription, error)
	// ParseFlashLoan is a log parse operation binding the contract event 0x7c186b2827b23e9024e7b29869cba58a97a4bac6567802a8ea6a8afa7b8c22f0.
	//
	// Solidity: event FlashLoan(address indexed receiver, uint8 tokenIndex, uint256 amount, uint256 amountFee, uint256 protocolFee)
	ParseFlashLoan(log types.Log) (*SwapFlashLoanFlashLoan, error)
	// FilterNewAdminFee is a free log retrieval operation binding the contract event 0xab599d640ca80cde2b09b128a4154a8dfe608cb80f4c9399c8b954b01fd35f38.
	//
	// Solidity: event NewAdminFee(uint256 newAdminFee)
	FilterNewAdminFee(opts *bind.FilterOpts) (*SwapFlashLoanNewAdminFeeIterator, error)
	// WatchNewAdminFee is a free log subscription operation binding the contract event 0xab599d640ca80cde2b09b128a4154a8dfe608cb80f4c9399c8b954b01fd35f38.
	//
	// Solidity: event NewAdminFee(uint256 newAdminFee)
	WatchNewAdminFee(opts *bind.WatchOpts, sink chan<- *SwapFlashLoanNewAdminFee) (event.Subscription, error)
	// ParseNewAdminFee is a log parse operation binding the contract event 0xab599d640ca80cde2b09b128a4154a8dfe608cb80f4c9399c8b954b01fd35f38.
	//
	// Solidity: event NewAdminFee(uint256 newAdminFee)
	ParseNewAdminFee(log types.Log) (*SwapFlashLoanNewAdminFee, error)
	// FilterNewSwapFee is a free log retrieval operation binding the contract event 0xd88ea5155021c6f8dafa1a741e173f595cdf77ce7c17d43342131d7f06afdfe5.
	//
	// Solidity: event NewSwapFee(uint256 newSwapFee)
	FilterNewSwapFee(opts *bind.FilterOpts) (*SwapFlashLoanNewSwapFeeIterator, error)
	// WatchNewSwapFee is a free log subscription operation binding the contract event 0xd88ea5155021c6f8dafa1a741e173f595cdf77ce7c17d43342131d7f06afdfe5.
	//
	// Solidity: event NewSwapFee(uint256 newSwapFee)
	WatchNewSwapFee(opts *bind.WatchOpts, sink chan<- *SwapFlashLoanNewSwapFee) (event.Subscription, error)
	// ParseNewSwapFee is a log parse operation binding the contract event 0xd88ea5155021c6f8dafa1a741e173f595cdf77ce7c17d43342131d7f06afdfe5.
	//
	// Solidity: event NewSwapFee(uint256 newSwapFee)
	ParseNewSwapFee(log types.Log) (*SwapFlashLoanNewSwapFee, error)
	// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
	//
	// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
	FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*SwapFlashLoanOwnershipTransferredIterator, error)
	// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
	//
	// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
	WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *SwapFlashLoanOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error)
	// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
	//
	// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
	ParseOwnershipTransferred(log types.Log) (*SwapFlashLoanOwnershipTransferred, error)
	// FilterPaused is a free log retrieval operation binding the contract event 0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258.
	//
	// Solidity: event Paused(address account)
	FilterPaused(opts *bind.FilterOpts) (*SwapFlashLoanPausedIterator, error)
	// WatchPaused is a free log subscription operation binding the contract event 0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258.
	//
	// Solidity: event Paused(address account)
	WatchPaused(opts *bind.WatchOpts, sink chan<- *SwapFlashLoanPaused) (event.Subscription, error)
	// ParsePaused is a log parse operation binding the contract event 0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258.
	//
	// Solidity: event Paused(address account)
	ParsePaused(log types.Log) (*SwapFlashLoanPaused, error)
	// FilterRampA is a free log retrieval operation binding the contract event 0xa2b71ec6df949300b59aab36b55e189697b750119dd349fcfa8c0f779e83c254.
	//
	// Solidity: event RampA(uint256 oldA, uint256 newA, uint256 initialTime, uint256 futureTime)
	FilterRampA(opts *bind.FilterOpts) (*SwapFlashLoanRampAIterator, error)
	// WatchRampA is a free log subscription operation binding the contract event 0xa2b71ec6df949300b59aab36b55e189697b750119dd349fcfa8c0f779e83c254.
	//
	// Solidity: event RampA(uint256 oldA, uint256 newA, uint256 initialTime, uint256 futureTime)
	WatchRampA(opts *bind.WatchOpts, sink chan<- *SwapFlashLoanRampA) (event.Subscription, error)
	// ParseRampA is a log parse operation binding the contract event 0xa2b71ec6df949300b59aab36b55e189697b750119dd349fcfa8c0f779e83c254.
	//
	// Solidity: event RampA(uint256 oldA, uint256 newA, uint256 initialTime, uint256 futureTime)
	ParseRampA(log types.Log) (*SwapFlashLoanRampA, error)
	// FilterRemoveLiquidity is a free log retrieval operation binding the contract event 0x88d38ed598fdd809c2bf01ee49cd24b7fdabf379a83d29567952b60324d58cef.
	//
	// Solidity: event RemoveLiquidity(address indexed provider, uint256[] tokenAmounts, uint256 lpTokenSupply)
	FilterRemoveLiquidity(opts *bind.FilterOpts, provider []common.Address) (*SwapFlashLoanRemoveLiquidityIterator, error)
	// WatchRemoveLiquidity is a free log subscription operation binding the contract event 0x88d38ed598fdd809c2bf01ee49cd24b7fdabf379a83d29567952b60324d58cef.
	//
	// Solidity: event RemoveLiquidity(address indexed provider, uint256[] tokenAmounts, uint256 lpTokenSupply)
	WatchRemoveLiquidity(opts *bind.WatchOpts, sink chan<- *SwapFlashLoanRemoveLiquidity, provider []common.Address) (event.Subscription, error)
	// ParseRemoveLiquidity is a log parse operation binding the contract event 0x88d38ed598fdd809c2bf01ee49cd24b7fdabf379a83d29567952b60324d58cef.
	//
	// Solidity: event RemoveLiquidity(address indexed provider, uint256[] tokenAmounts, uint256 lpTokenSupply)
	ParseRemoveLiquidity(log types.Log) (*SwapFlashLoanRemoveLiquidity, error)
	// FilterRemoveLiquidityImbalance is a free log retrieval operation binding the contract event 0x3631c28b1f9dd213e0319fb167b554d76b6c283a41143eb400a0d1adb1af1755.
	//
	// Solidity: event RemoveLiquidityImbalance(address indexed provider, uint256[] tokenAmounts, uint256[] fees, uint256 invariant, uint256 lpTokenSupply)
	FilterRemoveLiquidityImbalance(opts *bind.FilterOpts, provider []common.Address) (*SwapFlashLoanRemoveLiquidityImbalanceIterator, error)
	// WatchRemoveLiquidityImbalance is a free log subscription operation binding the contract event 0x3631c28b1f9dd213e0319fb167b554d76b6c283a41143eb400a0d1adb1af1755.
	//
	// Solidity: event RemoveLiquidityImbalance(address indexed provider, uint256[] tokenAmounts, uint256[] fees, uint256 invariant, uint256 lpTokenSupply)
	WatchRemoveLiquidityImbalance(opts *bind.WatchOpts, sink chan<- *SwapFlashLoanRemoveLiquidityImbalance, provider []common.Address) (event.Subscription, error)
	// ParseRemoveLiquidityImbalance is a log parse operation binding the contract event 0x3631c28b1f9dd213e0319fb167b554d76b6c283a41143eb400a0d1adb1af1755.
	//
	// Solidity: event RemoveLiquidityImbalance(address indexed provider, uint256[] tokenAmounts, uint256[] fees, uint256 invariant, uint256 lpTokenSupply)
	ParseRemoveLiquidityImbalance(log types.Log) (*SwapFlashLoanRemoveLiquidityImbalance, error)
	// FilterRemoveLiquidityOne is a free log retrieval operation binding the contract event 0x43fb02998f4e03da2e0e6fff53fdbf0c40a9f45f145dc377fc30615d7d7a8a64.
	//
	// Solidity: event RemoveLiquidityOne(address indexed provider, uint256 lpTokenAmount, uint256 lpTokenSupply, uint256 boughtId, uint256 tokensBought)
	FilterRemoveLiquidityOne(opts *bind.FilterOpts, provider []common.Address) (*SwapFlashLoanRemoveLiquidityOneIterator, error)
	// WatchRemoveLiquidityOne is a free log subscription operation binding the contract event 0x43fb02998f4e03da2e0e6fff53fdbf0c40a9f45f145dc377fc30615d7d7a8a64.
	//
	// Solidity: event RemoveLiquidityOne(address indexed provider, uint256 lpTokenAmount, uint256 lpTokenSupply, uint256 boughtId, uint256 tokensBought)
	WatchRemoveLiquidityOne(opts *bind.WatchOpts, sink chan<- *SwapFlashLoanRemoveLiquidityOne, provider []common.Address) (event.Subscription, error)
	// ParseRemoveLiquidityOne is a log parse operation binding the contract event 0x43fb02998f4e03da2e0e6fff53fdbf0c40a9f45f145dc377fc30615d7d7a8a64.
	//
	// Solidity: event RemoveLiquidityOne(address indexed provider, uint256 lpTokenAmount, uint256 lpTokenSupply, uint256 boughtId, uint256 tokensBought)
	ParseRemoveLiquidityOne(log types.Log) (*SwapFlashLoanRemoveLiquidityOne, error)
	// FilterStopRampA is a free log retrieval operation binding the contract event 0x46e22fb3709ad289f62ce63d469248536dbc78d82b84a3d7e74ad606dc201938.
	//
	// Solidity: event StopRampA(uint256 currentA, uint256 time)
	FilterStopRampA(opts *bind.FilterOpts) (*SwapFlashLoanStopRampAIterator, error)
	// WatchStopRampA is a free log subscription operation binding the contract event 0x46e22fb3709ad289f62ce63d469248536dbc78d82b84a3d7e74ad606dc201938.
	//
	// Solidity: event StopRampA(uint256 currentA, uint256 time)
	WatchStopRampA(opts *bind.WatchOpts, sink chan<- *SwapFlashLoanStopRampA) (event.Subscription, error)
	// ParseStopRampA is a log parse operation binding the contract event 0x46e22fb3709ad289f62ce63d469248536dbc78d82b84a3d7e74ad606dc201938.
	//
	// Solidity: event StopRampA(uint256 currentA, uint256 time)
	ParseStopRampA(log types.Log) (*SwapFlashLoanStopRampA, error)
	// FilterTokenSwap is a free log retrieval operation binding the contract event 0xc6c1e0630dbe9130cc068028486c0d118ddcea348550819defd5cb8c257f8a38.
	//
	// Solidity: event TokenSwap(address indexed buyer, uint256 tokensSold, uint256 tokensBought, uint128 soldId, uint128 boughtId)
	FilterTokenSwap(opts *bind.FilterOpts, buyer []common.Address) (*SwapFlashLoanTokenSwapIterator, error)
	// WatchTokenSwap is a free log subscription operation binding the contract event 0xc6c1e0630dbe9130cc068028486c0d118ddcea348550819defd5cb8c257f8a38.
	//
	// Solidity: event TokenSwap(address indexed buyer, uint256 tokensSold, uint256 tokensBought, uint128 soldId, uint128 boughtId)
	WatchTokenSwap(opts *bind.WatchOpts, sink chan<- *SwapFlashLoanTokenSwap, buyer []common.Address) (event.Subscription, error)
	// ParseTokenSwap is a log parse operation binding the contract event 0xc6c1e0630dbe9130cc068028486c0d118ddcea348550819defd5cb8c257f8a38.
	//
	// Solidity: event TokenSwap(address indexed buyer, uint256 tokensSold, uint256 tokensBought, uint128 soldId, uint128 boughtId)
	ParseTokenSwap(log types.Log) (*SwapFlashLoanTokenSwap, error)
	// FilterUnpaused is a free log retrieval operation binding the contract event 0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa.
	//
	// Solidity: event Unpaused(address account)
	FilterUnpaused(opts *bind.FilterOpts) (*SwapFlashLoanUnpausedIterator, error)
	// WatchUnpaused is a free log subscription operation binding the contract event 0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa.
	//
	// Solidity: event Unpaused(address account)
	WatchUnpaused(opts *bind.WatchOpts, sink chan<- *SwapFlashLoanUnpaused) (event.Subscription, error)
	// ParseUnpaused is a log parse operation binding the contract event 0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa.
	//
	// Solidity: event Unpaused(address account)
	ParseUnpaused(log types.Log) (*SwapFlashLoanUnpaused, error)
}
