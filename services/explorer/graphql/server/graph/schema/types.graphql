"""
BridgeTransaction represents an entire bridge transaction, including both
to and from transactions. If a `from` transaction does not have a corresponding
`to` transaction, `pending` will be true.
"""
type BridgeTransaction {
  fromInfo: PartialInfo
  toInfo:   PartialInfo
  kappa:        String
  pending:      Boolean
  swapSuccess:  Boolean
}
"""
PartialInfo is a transaction that occurred on one chain.
"""
type PartialInfo {
  chainID: Int
  address: String
  txnHash: String
  value:          String
  formattedValue: Float
  USDValue:       Float
  tokenAddress:   String
  tokenSymbol:    String
  blockNumber:    Int
  time:           Int
  formattedTime: String
}
"""
DateResult is a given statistic for a given date.
"""
type DateResult {
  date:   String,
  total:  Float
}
"""
HistoricalResult is a given statistic for dates.
"""
type HistoricalResult {
  total:        Float
  dateResults:  [DateResult]
  type:         HistoricalResultType
}
"""
DailyResult is a given statistic for dates.
"""
type DailyResult {
  total:        Float
  dateResults:  [DateResult]
  type:         DailyStatisticType
}
"""
ValueResult is a value result of either USD or numeric value.
"""
type ValueResult {
  value: String
}
"""
TransactionCountResult gives the amount of transactions that occurred for a specific chain ID.
"""
type TransactionCountResult {
  chainID:  Int
  count:    Int
}
"""
TokenCountResult gives the amount of transactions that occurred for a specific token, separated by chain ID.
"""
type TokenCountResult {
  chainID:      Int
  tokenAddress: String
  count:        Int
}
"""
AddressRanking gives the amount of transactions that occurred for a specific address across all chains.
"""
type AddressRanking {
  address:  String
  count:    Int
}

enum Duration {
  PAST_DAY
  PAST_MONTH
  ALL_TIME
}
enum Direction {
  IN
  OUT
}
enum StatisticType {
  MEAN_VOLUME_USD
  MEDIAN_VOLUME_USD
  TOTAL_VOLUME_USD
  MEAN_FEE_USD
  MEDIAN_FEE_USD
  TOTAL_FEE_USD
  COUNT_TRANSACTIONS
  COUNT_ADDRESSES
}
enum HistoricalResultType {
  BRIDGEVOLUME
  TRANSACTIONS
  ADDRESSES
}

enum Platform{
  ALL
  SWAP
  BRIDGE
  MESSAGE_BUS
}

enum DailyStatisticType {
  VOLUME
  TRANSACTIONS
  ADDRESSES
  FEE
}


type MessageBusTransaction {
  fromInfo:   PartialMessageBusInfo
  toInfo:     PartialMessageBusInfo
  pending:    Boolean
  messageID:  String
}

type PartialMessageBusInfo {
  chainID: Int
  chainName: String
  destinationChainID: Int
  destinationChainName: String
  contractAddress: String
  txnHash: String
  message:        String
  blockNumber:    Int
  time:           Int
  formattedTime: String
}
scalar ObjectScalar
type DateResultsByChain{
  date: String
  dateResults: DateResultByChain
}

"""
DateResult is a given statistic for a given date.
"""
type DateResultByChain {
  Ethereum: Float
  Optimism: Float
  Cronos: Float
  BSC: Float
  Polygon: Float
  Fantom: Float
  Boba: Float
  Metis: Float
  Moonbeam: Float
  Moonriver: Float
  Klaytn: Float
  Arbitrum: Float
  Avalanche: Float
  DFK: Float
  Aurora: Float
  Harmony: Float
  Canto: Float
  total:  Float
}
