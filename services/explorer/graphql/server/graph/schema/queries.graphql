type Query {

  """
  Returns bridged transactions filterable by chain, to/from address, to/from txn hash, token address, and keccak hash.
  """
  bridgeTransactions(
    chainID:        [Int]
    address:        String
    maxAmount:      Int
    minAmount:      Int
    startTime:      Int
    endTime:        Int
    txnHash:        String
    kappa:          String
    pending:        Boolean = false
    page:           Int = 1
    tokenAddress:   [String]
  ): [BridgeTransaction]

  """
  Message bus transactions
  """
  messageBusTransactions(
    chainID:        [Int]
    contractAddress:        String
    startTime:      Int
    endTime:        Int
    txnHash:        String
    messageID:      String
    pending:        Boolean = false
    page:           Int = 1
  ): [MessageBusTransaction]


  """
  Returns the COUNT of bridged transactions for a given chain. If direction of bridge transactions
  is not specified, it defaults to IN.
  Specifying no duration defaults to the last 24 hours.
  """
  countByChainId(
    chainID:    Int
    address:    String
    direction:  Direction = IN
    hours:      Int = 720
  ): [TransactionCountResult]
  """
  Returns counts of token addresses source and time.
  Specifying no parameters defaults to origin and 24 hours.
  """
  countByTokenAddress(
    chainID:    Int
    address:    String
    direction:  Direction = IN
    hours:      Int = 24
  ): [TokenCountResult]
  """
  Returns addresses and transaction count (origin) over time.
  Specifying no parameters defaults to 24 hours.
  """
  addressRanking(hours: Int = 24): [AddressRanking]

  """
  Returns mean/median/total/count of transactions transacted for a given duration, chain and address.
  Specifying no duration defaults to ALL_TIME, and no chain or address searches across all.
  """
  amountStatistic(
    type:         StatisticType!
    duration:     Duration = ALL_TIME
    platform:     Platform = ALL
    chainID:      Int
    address:      String
    tokenAddress: String
  ): ValueResult
  """
  Daily statistic data
  """
  dailyStatistics(
    chainID:  Int
    type:     DailyStatisticType = VOLUME
    platform: Platform = BRIDGE
    days:     Int = 30
  ): DailyResult

  """
  Daily statistic data
  """
  dailyStatisticsByChain(
    chainID:  Int
    type:     DailyStatisticType = VOLUME
    duration:     Duration = ALL_TIME
  ): [DateResultByChain]

  """
Ranked chainIDs by volume
  """
  rankedChainIDsByVolume(
    duration:     Duration = ALL_TIME
  ): [VolumeByChainID]

}
