// Code generated by github.com/Yamashou/gqlgenc, DO NOT EDIT.

package client

import (
	"net/http"

	"github.com/Yamashou/gqlgenc/client"
	"github.com/synapsecns/sanguine/services/explorer/graphql/server/graph/model"
)

type Client struct {
	Client *client.Client
}

func NewClient(cli *http.Client, baseURL string, options ...client.HTTPRequestOption) *Client {
	return &Client{Client: client.NewClient(cli, baseURL, options...)}
}

type Query struct {
	BridgeTransactions       []*model.BridgeTransaction      "json:\"bridgeTransactions\" graphql:\"bridgeTransactions\""
	LatestBridgeTransactions []*model.BridgeTransaction      "json:\"latestBridgeTransactions\" graphql:\"latestBridgeTransactions\""
	BridgeAmountStatistic    *model.ValueResult              "json:\"bridgeAmountStatistic\" graphql:\"bridgeAmountStatistic\""
	CountByChainID           []*model.TransactionCountResult "json:\"countByChainId\" graphql:\"countByChainId\""
	CountByTokenAddress      []*model.TokenCountResult       "json:\"countByTokenAddress\" graphql:\"countByTokenAddress\""
	AddressRanking           []*model.AddressRanking         "json:\"addressRanking\" graphql:\"addressRanking\""
	GetCSV                   *model.CSVData                  "json:\"getCsv\" graphql:\"getCsv\""
	HistoricalStatistics     *model.HistoricalResult         "json:\"historicalStatistics\" graphql:\"historicalStatistics\""
}
