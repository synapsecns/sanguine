
query GetBridgeTransactions($chainID: [Int], $address: String, $maxAmount: Int, $minAmount: Int, $startTime: Int, $endTime: Int, $txHash: String, $kappa: String, $pending: Boolean, $page: Int, $tokenAddress: [String]) {
  response: bridgeTransactions(
    chainID: $chainID
    address: $address
    maxAmount: $maxAmount
    minAmount: $minAmount
    startTime: $startTime
    endTime: $endTime
    txnHash: $txHash
    kappa: $kappa
    pending: $pending
    page: $page
    tokenAddress: $tokenAddress
  ) {
    fromInfo {
      chainID
      address
      txnHash
      value
      formattedValue
      USDValue
      tokenAddress
      tokenSymbol
      blockNumber
      time
      formattedTime
    }
    toInfo {
      chainID
      address
      txnHash
      value
      formattedValue
      USDValue
      tokenAddress
      tokenSymbol
      blockNumber
      time
      formattedTime
    }
    kappa
    pending
    swapSuccess
  }
}



query GetCountByChainId($chainID: Int, $address: String, $direction: Direction, $hours: Int) {
  response: countByChainId(
    chainID: $chainID
    address: $address
    direction: $direction
    hours: $hours
  ) {
    count
    chainID
    }
}

query GetCountByTokenAddress($chainID: Int, $address: String, $direction: Direction, $hours: Int) {
  response: countByTokenAddress(
    chainID: $chainID
    address: $address
    direction: $direction
    hours: $hours
  ) {
    chainID
    tokenAddress
    count
    }
}

query GetAddressRanking($hours: Int) {
  response: addressRanking(
    hours: $hours
  ) {
    address
    count
  }
}

query GetRankedChainIDsByVolume($duration: Duration) {
  response: rankedChainIDsByVolume(
    duration: $duration
  ) {
    chainID
    total
  }
}




query GetAmountStatistic($type: StatisticType!, $platform: Platform, $duration: Duration, $chainID: Int, $address: String, $tokenAddress: String) {
  response: amountStatistic(
    type: $type
    duration: $duration
    platform: $platform
    chainID: $chainID
    address: $address
    tokenAddress: $tokenAddress
  ) {
    value
  }
}
query GetDailyStatisticsByChain($chainID: Int, $type: DailyStatisticType, $duration: Duration) {
  response: dailyStatisticsByChain(
    chainID: $chainID
    type: $type
    duration: $duration
  ) {
    date
    ethereum
    optimism
    cronos
    bsc
    polygon
    fantom
    boba
    metis
    moonbeam
    moonriver
    klaytn
    arbitrum
    avalanche
    dfk
    aurora
    harmony
    canto
    total
  }
}

query GetDailyStatistics($chainID: Int, $type: DailyStatisticType, $platform: Platform, $days: Int) {
  response: dailyStatistics(
    chainID: $chainID
    type: $type
    days: $days
    platform: $platform
  ) {
    total
    dateResults {
      date
      total
    }
    type
  }
}

query GetMessageBusTransactions($chainID: [Int], $contractAddress: String, $startTime: Int, $endTime: Int, $txHash: String, $messageID: String, $pending: Boolean, $page: Int) {
  response: messageBusTransactions(
    chainID: $chainID
    contractAddress: $contractAddress
    startTime: $startTime
    endTime: $endTime
    txnHash: $txHash
    messageID: $messageID
    pending: $pending
    page: $page
  ) {
    fromInfo {
      chainID
      chainName
      destinationChainID
      destinationChainName
      contractAddress
      txnHash
      message
      blockNumber
      time
      formattedTime

    }
    toInfo {
      chainID
      chainName
      contractAddress
      txnHash
      message
      blockNumber
      time
      formattedTime
    }
    messageID
    pending
  }
}
