// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// CoingeckoPriceFetcher is an autogenerated mock type for the CoingeckoPriceFetcher type
type CoingeckoPriceFetcher struct {
	mock.Mock
}

// GetPrice provides a mock function with given fields: ctx, token
func (_m *CoingeckoPriceFetcher) GetPrice(ctx context.Context, token string) (float64, error) {
	ret := _m.Called(ctx, token)

	var r0 float64
	if rf, ok := ret.Get(0).(func(context.Context, string) float64); ok {
		r0 = rf(ctx, token)
	} else {
		r0 = ret.Get(0).(float64)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, token)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewCoingeckoPriceFetcher interface {
	mock.TestingT
	Cleanup(func())
}

// NewCoingeckoPriceFetcher creates a new instance of CoingeckoPriceFetcher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCoingeckoPriceFetcher(t mockConstructorTestingTNewCoingeckoPriceFetcher) *CoingeckoPriceFetcher {
	mock := &CoingeckoPriceFetcher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
