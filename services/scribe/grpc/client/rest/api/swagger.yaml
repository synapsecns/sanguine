openapi: 3.0.1
info:
  title: types/v1/service.proto
  version: version not set
servers:
- url: /
tags:
- name: ScribeService
paths:
  /grpc/v1/filter_logs:
    post:
      tags:
      - ScribeService
      operationId: ScribeService_FilterLogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1FilterLogsRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1FilterLogsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      x-codegen-request-body-name: body
  /grpc/v1/health_check:
    post:
      tags:
      - ScribeService
      summary: "see: https://github.com/grpc/grpc/blob/master/doc/health-checking.md"
      operationId: ScribeService_Check
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1HealthCheckRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1HealthCheckResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      x-codegen-request-body-name: body
  /grpc/v1/health_watch:
    post:
      tags:
      - ScribeService
      operationId: ScribeService_Watch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1HealthCheckRequest'
        required: true
      responses:
        "200":
          description: A successful response.(streaming responses)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stream result of v1HealthCheckResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      x-codegen-request-body-name: body
  /grpc/v1/stream_logs:
    post:
      tags:
      - ScribeService
      operationId: ScribeService_StreamLogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1StreamLogsRequest'
        required: true
      responses:
        "200":
          description: A successful response.(streaming responses)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stream result of v1StreamLogsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      x-codegen-request-body-name: body
components:
  schemas:
    HealthCheckResponseServingStatus:
      type: string
      default: UNKNOWN
      enum:
      - UNKNOWN
      - SERVING
      - NOT_SERVING
      - SERVICE_UNKNOWN
    protobufAny:
      type: object
      properties:
        '@type':
          type: string
      additionalProperties:
        type: object
      x-schema-name: protobufAny
    protobufNullValue:
      type: string
      description: |-
        `NullValue` is a singleton enumeration to represent the null value for the
        `Value` type union.

         The JSON representation for `NullValue` is JSON `null`.

         - NULL_VALUE: Null value.
      default: NULL_VALUE
      enum:
      - NULL_VALUE
    rpcStatus:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        details:
          type: array
          items:
            $ref: '#/components/schemas/protobufAny'
      example:
        code: 0
        details:
        - key: {}
        - key: {}
        message: message
    v1Address:
      type: object
      properties:
        bytes:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
      example:
        bytes: ""
    v1FilterLogsRequest:
      type: object
      properties:
        filter:
          $ref: '#/components/schemas/v1LogFilter'
        page:
          type: integer
          format: int64
    v1FilterLogsResponse:
      type: object
      properties:
        logs:
          type: array
          items:
            $ref: '#/components/schemas/v1Log'
      example:
        logs:
        - blockHash: null
          address:
            bytes: ""
          data: ""
          removed: true
          topics:
          - bytes: ""
          - bytes: ""
          blockNumber: blockNumber
          index: index
          txHash: null
          txIndex: txIndex
        - blockHash: null
          address:
            bytes: ""
          data: ""
          removed: true
          topics:
          - bytes: ""
          - bytes: ""
          blockNumber: blockNumber
          index: index
          txHash: null
          txIndex: txIndex
    v1Hash:
      type: object
      properties:
        bytes:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
      example:
        bytes: ""
    v1HealthCheckRequest:
      type: object
      properties:
        service:
          type: string
    v1HealthCheckResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/HealthCheckResponseServingStatus'
      example:
        status: UNKNOWN
    v1Log:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/v1Address'
        topics:
          type: array
          items:
            $ref: '#/components/schemas/v1Hash'
        data:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        blockNumber:
          type: string
          format: uint64
        txHash:
          $ref: '#/components/schemas/v1Hash'
        txIndex:
          type: string
          format: uint64
        blockHash:
          $ref: '#/components/schemas/v1Hash'
        index:
          type: string
          format: uint64
        removed:
          type: boolean
      example:
        blockHash: null
        address:
          bytes: ""
        data: ""
        removed: true
        topics:
        - bytes: ""
        - bytes: ""
        blockNumber: blockNumber
        index: index
        txHash: null
        txIndex: txIndex
    v1LogFilter:
      type: object
      properties:
        contractAddress:
          $ref: '#/components/schemas/v1NullableString'
        chainId:
          type: integer
          format: int64
        blockNumber:
          $ref: '#/components/schemas/v1NullableUint64'
        txHash:
          $ref: '#/components/schemas/v1NullableString'
        txIndex:
          $ref: '#/components/schemas/v1NullableUint64'
        blockHash:
          $ref: '#/components/schemas/v1NullableString'
        index:
          $ref: '#/components/schemas/v1NullableUint64'
        confirmed:
          $ref: '#/components/schemas/v1NullableBool'
    v1NullableBool:
      type: object
      properties:
        "null":
          type: string
        data:
          type: boolean
    v1NullableString:
      type: object
      properties:
        "null":
          type: string
        data:
          type: string
    v1NullableUint64:
      type: object
      properties:
        "null":
          type: string
        data:
          type: string
          format: uint64
    v1StreamLogsRequest:
      type: object
      properties:
        filter:
          $ref: '#/components/schemas/v1LogFilter'
        fromBlock:
          type: string
        toBlock:
          type: string
    v1StreamLogsResponse:
      type: object
      properties:
        log:
          $ref: '#/components/schemas/v1Log'
      example:
        log:
          blockHash: null
          address:
            bytes: ""
          data: ""
          removed: true
          topics:
          - bytes: ""
          - bytes: ""
          blockNumber: blockNumber
          index: index
          txHash: null
          txIndex: txIndex
    Stream result of v1HealthCheckResponse:
      title: Stream result of v1HealthCheckResponse
      type: object
      properties:
        result:
          $ref: '#/components/schemas/v1HealthCheckResponse'
        error:
          $ref: '#/components/schemas/rpcStatus'
      example:
        result:
          status: UNKNOWN
        error:
          code: 0
          details:
          - key: {}
          - key: {}
          message: message
    Stream result of v1StreamLogsResponse:
      title: Stream result of v1StreamLogsResponse
      type: object
      properties:
        result:
          $ref: '#/components/schemas/v1StreamLogsResponse'
        error:
          $ref: '#/components/schemas/rpcStatus'
      example:
        result:
          log:
            blockHash: null
            address:
              bytes: ""
            data: ""
            removed: true
            topics:
            - bytes: ""
            - bytes: ""
            blockNumber: blockNumber
            index: index
            txHash: null
            txIndex: txIndex
        error:
          code: 0
          details:
          - key: {}
          - key: {}
          message: message
x-original-swagger-version: "2.0"
