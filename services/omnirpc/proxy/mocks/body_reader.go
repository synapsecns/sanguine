// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// BodyReader is an autogenerated mock type for the BodyReader type
type BodyReader struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *BodyReader) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Read provides a mock function with given fields: p
func (_m *BodyReader) Read(p []byte) (int, error) {
	ret := _m.Called(p)

	var r0 int
	if rf, ok := ret.Get(0).(func([]byte) int); ok {
		r0 = rf(p)
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func([]byte) error); ok {
		r1 = rf(p)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewBodyReader interface {
	mock.TestingT
	Cleanup(func())
}

// NewBodyReader creates a new instance of BodyReader. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewBodyReader(t mockConstructorTestingTNewBodyReader) *BodyReader {
	mock := &BodyReader{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
