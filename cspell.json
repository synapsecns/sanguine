{
  "version": "0.2",
  "language": "en",
  "words": [
    "GÃ–RLI",
    "aall",
    "anonymization",
    "arbitrability",
    "artifacthub",
    "atrue",
    "auxilliary",
    "avweth",
    "basescan",
    "bcbd",
    "blastscan",
    "bridgable",
    "bridgeable",
    "bridgesyn",
    "bscscan",
    "bvalue",
    "capa",
    "cctp",
    "chainid",
    "chainprice",
    "circlecctp",
    "coinbasewallet",
    "commify",
    "crono",
    "cronos",
    "cyberattack",
    "defillama",
    "dencun",
    "depeg",
    "dogechain",
    "ellipsize",
    "ethergo",
    "ethersproject",
    "ethtx",
    "extralight",
    "ftmscan",
    "getids",
    "gitbook",
    "gorm",
    "headlessui",
    "incentivized",
    "interchain",
    "ipfs",
    "ipns",
    "klaytn",
    "libp",
    "lifi",
    "linea",
    "livefill",
    "livefill",
    "livefiller",
    "livefilling",
    "loadtest",
    "logrocket",
    "melrose",
    "metisusdc",
    "monke",
    "moonriver",
    "multichain",
    "nodereal",
    "noncestatus",
    "npdhrc",
    "nums",
    "ofac",
    "omnirpc",
    "opaciyt",
    "permissionlessly",
    "persistor",
    "popperjs",
    "pyroscope",
    "rainbowkit",
    "rebalance",
    "rebalancer",
    "rebalancing",
    "returntomonke",
    "scrollscan",
    "secg",
    "signerconfig",
    "signoz",
    "snowscan",
    "solana",
    "stablecoins",
    "stableswap",
    "stakable",
    "swapable",
    "swapabletype",
    "synape",
    "synapsecns",
    "synapseprotocol",
    "synpfpborder",
    "traderjoe",
    "tsdx",
    "tvls",
    "txdb",
    "txns",
    "unbonded",
    "unincentivized",
    "unstake",
    "unstaked",
    "unstaking",
    "upserted",
    "viem",
    "wagmi",
    "wethe",
    "worldchain",
    "xngmi",
    "xstep"
  ],
  "dictionaries": [
    "en_US",
    "cryptocurrencies",
    "golang",
    "softwareTerms",
    "typescript"
  ],
  "ignorePaths": [
    ".docusaurus/**",
    "build/**",
    "node_modules/**",
    "docusaurus.config.ts",
    "CHANGELOG.md"
  ],
  "ignoreRegExpList": [
    "G-[A-Z0-9]{9,}",
    "(?:const|let|var)\\s+[a-zA-Z_][a-zA-Z0-9_]*\\s*=\\s*(?:\\(|\\{|\\[|\"|\\'|\\d|`|=>)",
    "id=\"[\\w-]+\"",
    "[^a-zA-Z\\s].*"
  ],
  "patterns": [
    {
      "name": "markdown_code_blocks",
      "pattern": "/```[\\s\\S]*?```/g",
      "description": "Ignore code blocks in markdown"
    },
    {
      "name": "urls_and_domains",
      "pattern": "(?:https?://)?(?:[\\w-]+\\.)+[\\w-]+(?:/[\\w-./?%&=]*)?",
      "description": "Ignore URLs and domain names"
    },
    {
      "name": "websocket_urls",
      "pattern": "wss?://[^\\s]*",
      "description": "Ignore WebSocket URLs"
    }
  ]
}
