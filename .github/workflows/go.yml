name: Go Workflows
on:
  pull_request:
  push:
    branches-ignore:
      - 'gh-pages'


jobs:
  # make sure the build works
  build:
    name: Build
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        go-version:
          - 1.18.x
        platform:
          - ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: 'recursive'
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: authenticate with github for private go modules
        uses: fusion-engineering/setup-git-credentials@v2
        with:
          credentials: https://0xnero:${{secrets.GIT_TOKEN }}@github.com/
      - name: Go modules cache
        uses: actions/cache@v2
        with:
          # see https://github.com/mvdan/github-actions-golang
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
            %LocalAppData%\go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Build
        # go build all workspaces
        run:  go build $(go work edit -json | jq -c -r '[.Use[].DiskPath] | map_values(. + "/...")[]')

  test:
    name: Test
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        go-version:
          - 1.18.x
        platform:
          - ubuntu-latest
    services:
      mariadb:
        image: mariadb:latest
        ports:
          - 3306
        env:
          MYSQL_USER: user
          MYSQL_PASSWORD: password
          MYSQL_DATABASE: test
          MYSQL_ROOT_PASSWORD: password
        options: --health-cmd="mysqladmin ping" --health-interval=1s --health-timeout=1s --health-retries=30

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: 'recursive'

      - name: Go modules cache
        uses: actions/cache@v2
        with:
          # see https://github.com/mvdan/github-actions-golang
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
            %LocalAppData%\go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: authenticate with github for private go modules
        uses: fusion-engineering/setup-git-credentials@v2
        with:
          credentials: https://trajan0x:${{secrets.GIT_TOKEN }}@github.com/

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Verify MariaDB connection
        env:
          PORT: ${{ job.services.mariadb.ports[3306] }}
        run: |
          while ! mysqladmin ping -h"127.0.0.1" -P"$PORT" --silent; do
          sleep 1
          done

      - name: Test
        run:  go test $(go work edit -json | jq -c -r '[.Use[].DiskPath] | map_values(. + "/...")[]')  -coverprofile=profile.cov
        env:
          ENABLE_MYSQL_TEST: true
          MYSQL_HOST: 0.0.0.0
          MYSQL_USER: user
          MYSQL_PASSWORD: password
          MYSQL_DATABASE: test
          MYSQL_ROOT_PASSWORD: password
          MYSQL_PORT: ${{ job.services.mariadb.ports[3306] }}
          GOMAXPROCS: 18

      - name: Generate ignore list
        # generate a list of files to ignore on goveralls
        run: |
          echo "IGNORED=$(find . \( -name "*_generated.go" -o -name "*.abigen.go"  -o -name "*_string.go"   \) -print0 | xargs -0 ls | sed 's/.\/*//' | tr '\n' ',' |  sed 's/,*\r*$//')" >> $GITHUB_ENV

      # We customize the build step because by default
      # We can not use ** because goveralls uses filepath.Match
      # to match ignore files and it does not support it.
      - name: Send coverage
        uses: shogo82148/actions-goveralls@v1
        with:
          github-token: ${{ secrets.github_token }}
          path-to-profile: profile.cov
          ignore: ${{ env.IGNORED }}

  #note: right now this is not run against all work dirs
  lint:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package:
          - core
          - tools
          - ethergo
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: 'recursive'

      - name: authenticate with github for private go modules
        uses: fusion-engineering/setup-git-credentials@v2
        with:
          credentials: https://0xnero:${{secrets.GIT_TOKEN }}@github.com/


      # workaround for: https://github.com/golangci/golangci-lint-action/issues/479
      - name: Setup cache key
        run: cp ${{matrix.package}}/go.mod go.mod -v

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          working-directory: ${{matrix.package}}/
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: v1.46.2
          # Path to your GolangCI-Lint config within the repo (optional)
          config: ${{ env.GITHUB_WORKSPACE }}/.golangci.yml
          # see: https://github.com/golangci/golangci-lint/issues/2654
          args: --timeout=5m
        env:
          # GitHub token for annotations (optional)
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # see: https://github.com/golangci/golangci-lint/issues/337#issuecomment-510136513
          GOGC: 20
          GOPRIVATE: "GOPRIVATE=github.com/synapsecns/synapse-node"
