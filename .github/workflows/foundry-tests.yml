on: [push]

name: Foundry Tests

jobs:
  check:
    name: Packages/contracts
    runs-on: ubuntu-latest
    steps:
#      - uses: actions/checkout@v3
#        with:
#          submodules: recursive
#
#
#      - name: Read .nvmrc
#        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
#        id: nvmrc
#
#      - name: Get yarn cache directory path
#        id: yarn-cache-dir-path
#        run: echo "::set-output name=dir::$(yarn cache dir)"
#
#      - name: "Use NodeJS by nvmrc"
#        uses: actions/setup-node@v2
#        with:
#          node-version: '${{steps.nvmrc.outputs.NVMRC}}'
#
#      - name: Initialize Yarn cache
#        uses: actions/cache@v2
#        id: yarn-cache
#        with:
#          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
#          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-yarn-
#
#      - name: Installing dependencies
#        working-directory: ./packages/contracts
#        run: yarn install --frozen-lockfile --check-files
#
#      - name: Install Foundry
#        uses: foundry-rs/foundry-toolchain@v1
#        with:
#          version: nightly
#
#      - name: Run tests
#        working-directory: ./packages/contracts
#        run: forge coverage -vvv --report=lcov
#
#      - name: Run snapshot
#        working-directory: ./packages/contracts
#        run: forge snapshot >> $GITHUB_STEP_SUMMARY
#
#      - name: Send Coverage
#        uses: coverallsapp/github-action@master
#        with:
#          github-token: ${{ secrets.github_token }}
#          path-to-lcov: ./packages/contracts/lcov.info
#          base-path: ./packages/contracts/
#          flag-name: foundry
#          parallel: true
      - name: Invoke workflow without inputs
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Combine Coverage
          token: ${{ secrets.DISPATCH_SECRET }}
