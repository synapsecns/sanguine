// Code generated by "stringer -type=contractTypeImpl -linecomment"; DO NOT EDIT.

package testutil

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OriginType-0]
	_ = x[MessageHarnessType-1]
	_ = x[OriginHarnessType-2]
	_ = x[StateHarnessType-3]
	_ = x[SnapshotHarnessType-4]
	_ = x[AttestationHarnessType-5]
	_ = x[TipsHarnessType-6]
	_ = x[HeaderHarnessType-7]
	_ = x[DestinationHarnessType-8]
	_ = x[SummitHarnessType-9]
	_ = x[SummitType-10]
	_ = x[DestinationType-11]
	_ = x[AgentsTestContractType-12]
	_ = x[TestClientType-13]
	_ = x[PingPongClientType-14]
	_ = x[LightManagerHarnessType-15]
	_ = x[BondingManagerHarnessType-16]
	_ = x[LightManagerType-17]
	_ = x[BondingManagerType-18]
	_ = x[GasDataHarnessType-19]
	_ = x[GasOracleType-20]
	_ = x[InboxType-21]
	_ = x[LightInboxType-22]
}

const _contractTypeImpl_name = "OriginMessageHarnessOriginHarnessStateHarnessTypeSnapshotHarnessTypeAttestationHarnessTypeTipsHarnessTypeHeaderHarnessTypeDestinationHarnessSummitHarnessSummitDestinationAgentsTestContractTestClientPingPongClientLightManagerHarnessBondingManagerHarnessLightManagerBondingManagerGasDataHarnessTypeGasOracleInboxLightInbox"

var _contractTypeImpl_index = [...]uint16{0, 6, 20, 33, 49, 68, 90, 105, 122, 140, 153, 159, 170, 188, 198, 212, 231, 252, 264, 278, 296, 305, 310, 320}

func (i contractTypeImpl) String() string {
	if i < 0 || i >= contractTypeImpl(len(_contractTypeImpl_index)-1) {
		return "contractTypeImpl(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _contractTypeImpl_name[_contractTypeImpl_index[i]:_contractTypeImpl_index[i+1]]
}
