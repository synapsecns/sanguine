// autogenerated file

package bondingmanager

import (
	"math/big"

	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
)

// IBondingManagerTransactor ...
type IBondingManagerTransactor interface {
	// AddAgent is a paid mutator transaction binding the contract method 0x237a85a5.
	//
	// Solidity: function addAgent(uint32 domain, address agent, bytes32[] proof) returns()
	AddAgent(opts *bind.TransactOpts, domain uint32, agent common.Address, proof [][32]byte) (*types.Transaction, error)
	// CompleteSlashing is a paid mutator transaction binding the contract method 0xfbc5265e.
	//
	// Solidity: function completeSlashing(uint32 domain, address agent, bytes32[] proof) returns()
	CompleteSlashing(opts *bind.TransactOpts, domain uint32, agent common.Address, proof [][32]byte) (*types.Transaction, error)
	// CompleteUnstaking is a paid mutator transaction binding the contract method 0x4c3e1c1f.
	//
	// Solidity: function completeUnstaking(uint32 domain, address agent, bytes32[] proof) returns()
	CompleteUnstaking(opts *bind.TransactOpts, domain uint32, agent common.Address, proof [][32]byte) (*types.Transaction, error)
	// Initialize is a paid mutator transaction binding the contract method 0xf8c8765e.
	//
	// Solidity: function initialize(address origin_, address destination_, address inbox_, address summit_) returns()
	Initialize(opts *bind.TransactOpts, origin_ common.Address, destination_ common.Address, inbox_ common.Address, summit_ common.Address) (*types.Transaction, error)
	// InitiateUnstaking is a paid mutator transaction binding the contract method 0x130c5673.
	//
	// Solidity: function initiateUnstaking(uint32 domain, address agent, bytes32[] proof) returns()
	InitiateUnstaking(opts *bind.TransactOpts, domain uint32, agent common.Address, proof [][32]byte) (*types.Transaction, error)
	// Multicall is a paid mutator transaction binding the contract method 0x60fc8466.
	//
	// Solidity: function multicall((bool,bytes)[] calls) returns((bool,bytes)[] callResults)
	Multicall(opts *bind.TransactOpts, calls []MultiCallableCall) (*types.Transaction, error)
	// OpenDispute is a paid mutator transaction binding the contract method 0xa2155c34.
	//
	// Solidity: function openDispute(uint32 guardIndex, uint32 notaryIndex) returns()
	OpenDispute(opts *bind.TransactOpts, guardIndex uint32, notaryIndex uint32) (*types.Transaction, error)
	// RemoteSlashAgent is a paid mutator transaction binding the contract method 0x9d228a51.
	//
	// Solidity: function remoteSlashAgent(uint32 msgOrigin, uint256 proofMaturity, uint32 domain, address agent, address prover) returns(bytes4 magicValue)
	RemoteSlashAgent(opts *bind.TransactOpts, msgOrigin uint32, proofMaturity *big.Int, domain uint32, agent common.Address, prover common.Address) (*types.Transaction, error)
	// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
	//
	// Solidity: function renounceOwnership() returns()
	RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error)
	// ResolveStuckDispute is a paid mutator transaction binding the contract method 0x89791e17.
	//
	// Solidity: function resolveStuckDispute(uint32 domain, address slashedAgent) returns()
	ResolveStuckDispute(opts *bind.TransactOpts, domain uint32, slashedAgent common.Address) (*types.Transaction, error)
	// SlashAgent is a paid mutator transaction binding the contract method 0x2853a0e6.
	//
	// Solidity: function slashAgent(uint32 domain, address agent, address prover) returns()
	SlashAgent(opts *bind.TransactOpts, domain uint32, agent common.Address, prover common.Address) (*types.Transaction, error)
	// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
	//
	// Solidity: function transferOwnership(address newOwner) returns()
	TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error)
	// WithdrawTips is a paid mutator transaction binding the contract method 0xcc875501.
	//
	// Solidity: function withdrawTips(address recipient, uint32 origin_, uint256 amount) returns()
	WithdrawTips(opts *bind.TransactOpts, recipient common.Address, origin_ uint32, amount *big.Int) (*types.Transaction, error)
}
