{"solidity/SynapseGasOracleMock.sol:IGasOracle":{"code":"0x","runtime-code":"0x","info":{"source":"// SPDX-License-Identifier: MIT\npragma solidity =0.8.20 ^0.8.0;\n\n// contracts/interfaces/IGasOracle.sol\n\ninterface IGasOracle {\n    /// @notice Convert a value from the native token of a remote chain to the local native token.\n    /// @dev Will revert if no price is available for the remote chain.\n    /// @param remoteChainId        The chain id of the remote chain.\n    /// @param value                The value to convert.\n    function convertRemoteValueToLocalUnits(uint64 remoteChainId, uint256 value) external view returns (uint256);\n\n    /// @notice Estimate the cost of execution a transaction on a remote chain,\n    /// and convert it to the local native token.\n    /// @dev Will revert if no price is available for the remote chain.\n    /// @param remoteChainId        The chain id of the remote chain.\n    /// @param gasLimit             The gas limit of the transaction.\n    /// @param calldataSize         The size of the transaction calldata.\n    function estimateTxCostInLocalUnits(\n        uint64 remoteChainId,\n        uint256 gasLimit,\n        uint256 calldataSize\n    )\n        external\n        view\n        returns (uint256);\n\n    /// @notice Estimate the cost of execution a transaction on a remote chain,\n    /// and return it as is in the remote chain's native token.\n    /// @dev Will revert if no price is available for the remote chain.\n    /// @param remoteChainId        The chain id of the remote chain.\n    /// @param gasLimit             The gas limit of the transaction.\n    /// @param calldataSize         The size of the transaction calldata.\n    function estimateTxCostInRemoteUnits(\n        uint64 remoteChainId,\n        uint256 gasLimit,\n        uint256 calldataSize\n    )\n        external\n        view\n        returns (uint256);\n}\n\n// contracts/interfaces/ISynapseGasOracle.sol\n\ninterface ISynapseGasOracle is IGasOracle {\n    /// @notice Allows Synapse Module to pass the gas data from a remote chain to the Gas Oracle.\n    /// @dev Could only be called by Synapse Module.\n    /// @param srcChainId        The chain id of the remote chain.\n    /// @param data              The gas data from the remote chain.\n    function receiveRemoteGasData(uint64 srcChainId, bytes calldata data) external;\n\n    /// @notice Gets the gas data for the local chain.\n    function getLocalGasData() external view returns (bytes memory);\n}\n\n// test/mocks/SynapseGasOracleMock.sol\n\n// solhint-disable no-empty-blocks\ncontract SynapseGasOracleMock is ISynapseGasOracle {\n    function receiveRemoteGasData(uint64 srcChainId, bytes calldata data) external {}\n\n    function getLocalGasData() external view returns (bytes memory) {}\n\n    function convertRemoteValueToLocalUnits(\n        uint64 remoteChainId,\n        uint256 value\n    )\n        external\n        view\n        override\n        returns (uint256)\n    {}\n\n    function estimateTxCostInLocalUnits(\n        uint64 remoteChainId,\n        uint256 gasLimit,\n        uint256 calldataSize\n    )\n        external\n        view\n        override\n        returns (uint256)\n    {}\n\n    function estimateTxCostInRemoteUnits(\n        uint64 remoteChainId,\n        uint256 gasLimit,\n        uint256 calldataSize\n    )\n        external\n        view\n        override\n        returns (uint256)\n    {}\n}\n","language":"Solidity","languageVersion":"0.8.20","compilerVersion":"0.8.20","compilerOptions":"--combined-json bin,bin-runtime,srcmap,srcmap-runtime,abi,userdoc,devdoc,metadata,hashes --optimize --optimize-runs 10000 --allow-paths ., ./, ../ --evm-version=istanbul","srcMap":"","srcMapRuntime":"","abiDefinition":[{"inputs":[{"internalType":"uint64","name":"remoteChainId","type":"uint64"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"convertRemoteValueToLocalUnits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"remoteChainId","type":"uint64"},{"internalType":"uint256","name":"gasLimit","type":"uint256"},{"internalType":"uint256","name":"calldataSize","type":"uint256"}],"name":"estimateTxCostInLocalUnits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"remoteChainId","type":"uint64"},{"internalType":"uint256","name":"gasLimit","type":"uint256"},{"internalType":"uint256","name":"calldataSize","type":"uint256"}],"name":"estimateTxCostInRemoteUnits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"userDoc":{"kind":"user","methods":{"convertRemoteValueToLocalUnits(uint64,uint256)":{"notice":"Convert a value from the native token of a remote chain to the local native token."},"estimateTxCostInLocalUnits(uint64,uint256,uint256)":{"notice":"Estimate the cost of execution a transaction on a remote chain, and convert it to the local native token."},"estimateTxCostInRemoteUnits(uint64,uint256,uint256)":{"notice":"Estimate the cost of execution a transaction on a remote chain, and return it as is in the remote chain's native token."}},"version":1},"developerDoc":{"kind":"dev","methods":{"convertRemoteValueToLocalUnits(uint64,uint256)":{"details":"Will revert if no price is available for the remote chain.","params":{"remoteChainId":"The chain id of the remote chain.","value":"The value to convert."}},"estimateTxCostInLocalUnits(uint64,uint256,uint256)":{"details":"Will revert if no price is available for the remote chain.","params":{"calldataSize":"The size of the transaction calldata.","gasLimit":"The gas limit of the transaction.","remoteChainId":"The chain id of the remote chain."}},"estimateTxCostInRemoteUnits(uint64,uint256,uint256)":{"details":"Will revert if no price is available for the remote chain.","params":{"calldataSize":"The size of the transaction calldata.","gasLimit":"The gas limit of the transaction.","remoteChainId":"The chain id of the remote chain."}}},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"remoteChainId\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"convertRemoteValueToLocalUnits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"remoteChainId\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"calldataSize\",\"type\":\"uint256\"}],\"name\":\"estimateTxCostInLocalUnits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"remoteChainId\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"calldataSize\",\"type\":\"uint256\"}],\"name\":\"estimateTxCostInRemoteUnits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"convertRemoteValueToLocalUnits(uint64,uint256)\":{\"details\":\"Will revert if no price is available for the remote chain.\",\"params\":{\"remoteChainId\":\"The chain id of the remote chain.\",\"value\":\"The value to convert.\"}},\"estimateTxCostInLocalUnits(uint64,uint256,uint256)\":{\"details\":\"Will revert if no price is available for the remote chain.\",\"params\":{\"calldataSize\":\"The size of the transaction calldata.\",\"gasLimit\":\"The gas limit of the transaction.\",\"remoteChainId\":\"The chain id of the remote chain.\"}},\"estimateTxCostInRemoteUnits(uint64,uint256,uint256)\":{\"details\":\"Will revert if no price is available for the remote chain.\",\"params\":{\"calldataSize\":\"The size of the transaction calldata.\",\"gasLimit\":\"The gas limit of the transaction.\",\"remoteChainId\":\"The chain id of the remote chain.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"convertRemoteValueToLocalUnits(uint64,uint256)\":{\"notice\":\"Convert a value from the native token of a remote chain to the local native token.\"},\"estimateTxCostInLocalUnits(uint64,uint256,uint256)\":{\"notice\":\"Estimate the cost of execution a transaction on a remote chain, and convert it to the local native token.\"},\"estimateTxCostInRemoteUnits(uint64,uint256,uint256)\":{\"notice\":\"Estimate the cost of execution a transaction on a remote chain, and return it as is in the remote chain's native token.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solidity/SynapseGasOracleMock.sol\":\"IGasOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"solidity/SynapseGasOracleMock.sol\":{\"keccak256\":\"0x28316f74c2b50cefc95a5f9916728d072bd344a5698921dd3989845a377a1e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd513482a3752b21948defbd0d8e253d25360bc96c13f9529b2cdb31ec343a52\",\"dweb:/ipfs/Qmc9GUg1uHKJDThBpfeXx4WgxfK6dXzBHzbz7Z21Nw3ETv\"]}},\"version\":1}"},"hashes":{"convertRemoteValueToLocalUnits(uint64,uint256)":"40658a74","estimateTxCostInLocalUnits(uint64,uint256,uint256)":"bf495c88","estimateTxCostInRemoteUnits(uint64,uint256,uint256)":"b376a688"}},"solidity/SynapseGasOracleMock.sol:ISynapseGasOracle":{"code":"0x","runtime-code":"0x","info":{"source":"// SPDX-License-Identifier: MIT\npragma solidity =0.8.20 ^0.8.0;\n\n// contracts/interfaces/IGasOracle.sol\n\ninterface IGasOracle {\n    /// @notice Convert a value from the native token of a remote chain to the local native token.\n    /// @dev Will revert if no price is available for the remote chain.\n    /// @param remoteChainId        The chain id of the remote chain.\n    /// @param value                The value to convert.\n    function convertRemoteValueToLocalUnits(uint64 remoteChainId, uint256 value) external view returns (uint256);\n\n    /// @notice Estimate the cost of execution a transaction on a remote chain,\n    /// and convert it to the local native token.\n    /// @dev Will revert if no price is available for the remote chain.\n    /// @param remoteChainId        The chain id of the remote chain.\n    /// @param gasLimit             The gas limit of the transaction.\n    /// @param calldataSize         The size of the transaction calldata.\n    function estimateTxCostInLocalUnits(\n        uint64 remoteChainId,\n        uint256 gasLimit,\n        uint256 calldataSize\n    )\n        external\n        view\n        returns (uint256);\n\n    /// @notice Estimate the cost of execution a transaction on a remote chain,\n    /// and return it as is in the remote chain's native token.\n    /// @dev Will revert if no price is available for the remote chain.\n    /// @param remoteChainId        The chain id of the remote chain.\n    /// @param gasLimit             The gas limit of the transaction.\n    /// @param calldataSize         The size of the transaction calldata.\n    function estimateTxCostInRemoteUnits(\n        uint64 remoteChainId,\n        uint256 gasLimit,\n        uint256 calldataSize\n    )\n        external\n        view\n        returns (uint256);\n}\n\n// contracts/interfaces/ISynapseGasOracle.sol\n\ninterface ISynapseGasOracle is IGasOracle {\n    /// @notice Allows Synapse Module to pass the gas data from a remote chain to the Gas Oracle.\n    /// @dev Could only be called by Synapse Module.\n    /// @param srcChainId        The chain id of the remote chain.\n    /// @param data              The gas data from the remote chain.\n    function receiveRemoteGasData(uint64 srcChainId, bytes calldata data) external;\n\n    /// @notice Gets the gas data for the local chain.\n    function getLocalGasData() external view returns (bytes memory);\n}\n\n// test/mocks/SynapseGasOracleMock.sol\n\n// solhint-disable no-empty-blocks\ncontract SynapseGasOracleMock is ISynapseGasOracle {\n    function receiveRemoteGasData(uint64 srcChainId, bytes calldata data) external {}\n\n    function getLocalGasData() external view returns (bytes memory) {}\n\n    function convertRemoteValueToLocalUnits(\n        uint64 remoteChainId,\n        uint256 value\n    )\n        external\n        view\n        override\n        returns (uint256)\n    {}\n\n    function estimateTxCostInLocalUnits(\n        uint64 remoteChainId,\n        uint256 gasLimit,\n        uint256 calldataSize\n    )\n        external\n        view\n        override\n        returns (uint256)\n    {}\n\n    function estimateTxCostInRemoteUnits(\n        uint64 remoteChainId,\n        uint256 gasLimit,\n        uint256 calldataSize\n    )\n        external\n        view\n        override\n        returns (uint256)\n    {}\n}\n","language":"Solidity","languageVersion":"0.8.20","compilerVersion":"0.8.20","compilerOptions":"--combined-json bin,bin-runtime,srcmap,srcmap-runtime,abi,userdoc,devdoc,metadata,hashes --optimize --optimize-runs 10000 --allow-paths ., ./, ../ --evm-version=istanbul","srcMap":"","srcMapRuntime":"","abiDefinition":[{"inputs":[{"internalType":"uint64","name":"remoteChainId","type":"uint64"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"convertRemoteValueToLocalUnits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"remoteChainId","type":"uint64"},{"internalType":"uint256","name":"gasLimit","type":"uint256"},{"internalType":"uint256","name":"calldataSize","type":"uint256"}],"name":"estimateTxCostInLocalUnits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"remoteChainId","type":"uint64"},{"internalType":"uint256","name":"gasLimit","type":"uint256"},{"internalType":"uint256","name":"calldataSize","type":"uint256"}],"name":"estimateTxCostInRemoteUnits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLocalGasData","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"srcChainId","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"receiveRemoteGasData","outputs":[],"stateMutability":"nonpayable","type":"function"}],"userDoc":{"kind":"user","methods":{"convertRemoteValueToLocalUnits(uint64,uint256)":{"notice":"Convert a value from the native token of a remote chain to the local native token."},"estimateTxCostInLocalUnits(uint64,uint256,uint256)":{"notice":"Estimate the cost of execution a transaction on a remote chain, and convert it to the local native token."},"estimateTxCostInRemoteUnits(uint64,uint256,uint256)":{"notice":"Estimate the cost of execution a transaction on a remote chain, and return it as is in the remote chain's native token."},"getLocalGasData()":{"notice":"Gets the gas data for the local chain."},"receiveRemoteGasData(uint64,bytes)":{"notice":"Allows Synapse Module to pass the gas data from a remote chain to the Gas Oracle."}},"version":1},"developerDoc":{"kind":"dev","methods":{"convertRemoteValueToLocalUnits(uint64,uint256)":{"details":"Will revert if no price is available for the remote chain.","params":{"remoteChainId":"The chain id of the remote chain.","value":"The value to convert."}},"estimateTxCostInLocalUnits(uint64,uint256,uint256)":{"details":"Will revert if no price is available for the remote chain.","params":{"calldataSize":"The size of the transaction calldata.","gasLimit":"The gas limit of the transaction.","remoteChainId":"The chain id of the remote chain."}},"estimateTxCostInRemoteUnits(uint64,uint256,uint256)":{"details":"Will revert if no price is available for the remote chain.","params":{"calldataSize":"The size of the transaction calldata.","gasLimit":"The gas limit of the transaction.","remoteChainId":"The chain id of the remote chain."}},"receiveRemoteGasData(uint64,bytes)":{"details":"Could only be called by Synapse Module.","params":{"data":"The gas data from the remote chain.","srcChainId":"The chain id of the remote chain."}}},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"remoteChainId\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"convertRemoteValueToLocalUnits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"remoteChainId\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"calldataSize\",\"type\":\"uint256\"}],\"name\":\"estimateTxCostInLocalUnits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"remoteChainId\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"calldataSize\",\"type\":\"uint256\"}],\"name\":\"estimateTxCostInRemoteUnits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLocalGasData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"srcChainId\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"receiveRemoteGasData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"convertRemoteValueToLocalUnits(uint64,uint256)\":{\"details\":\"Will revert if no price is available for the remote chain.\",\"params\":{\"remoteChainId\":\"The chain id of the remote chain.\",\"value\":\"The value to convert.\"}},\"estimateTxCostInLocalUnits(uint64,uint256,uint256)\":{\"details\":\"Will revert if no price is available for the remote chain.\",\"params\":{\"calldataSize\":\"The size of the transaction calldata.\",\"gasLimit\":\"The gas limit of the transaction.\",\"remoteChainId\":\"The chain id of the remote chain.\"}},\"estimateTxCostInRemoteUnits(uint64,uint256,uint256)\":{\"details\":\"Will revert if no price is available for the remote chain.\",\"params\":{\"calldataSize\":\"The size of the transaction calldata.\",\"gasLimit\":\"The gas limit of the transaction.\",\"remoteChainId\":\"The chain id of the remote chain.\"}},\"receiveRemoteGasData(uint64,bytes)\":{\"details\":\"Could only be called by Synapse Module.\",\"params\":{\"data\":\"The gas data from the remote chain.\",\"srcChainId\":\"The chain id of the remote chain.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"convertRemoteValueToLocalUnits(uint64,uint256)\":{\"notice\":\"Convert a value from the native token of a remote chain to the local native token.\"},\"estimateTxCostInLocalUnits(uint64,uint256,uint256)\":{\"notice\":\"Estimate the cost of execution a transaction on a remote chain, and convert it to the local native token.\"},\"estimateTxCostInRemoteUnits(uint64,uint256,uint256)\":{\"notice\":\"Estimate the cost of execution a transaction on a remote chain, and return it as is in the remote chain's native token.\"},\"getLocalGasData()\":{\"notice\":\"Gets the gas data for the local chain.\"},\"receiveRemoteGasData(uint64,bytes)\":{\"notice\":\"Allows Synapse Module to pass the gas data from a remote chain to the Gas Oracle.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solidity/SynapseGasOracleMock.sol\":\"ISynapseGasOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"solidity/SynapseGasOracleMock.sol\":{\"keccak256\":\"0x28316f74c2b50cefc95a5f9916728d072bd344a5698921dd3989845a377a1e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd513482a3752b21948defbd0d8e253d25360bc96c13f9529b2cdb31ec343a52\",\"dweb:/ipfs/Qmc9GUg1uHKJDThBpfeXx4WgxfK6dXzBHzbz7Z21Nw3ETv\"]}},\"version\":1}"},"hashes":{"convertRemoteValueToLocalUnits(uint64,uint256)":"40658a74","estimateTxCostInLocalUnits(uint64,uint256,uint256)":"bf495c88","estimateTxCostInRemoteUnits(uint64,uint256,uint256)":"b376a688","getLocalGasData()":"6f928aa7","receiveRemoteGasData(uint64,bytes)":"83389de7"}},"solidity/SynapseGasOracleMock.sol:SynapseGasOracleMock":{"code":"0x608060405234801561001057600080fd5b5061026f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c806383389de71161005057806383389de7146100a4578063b376a688146100b9578063bf495c88146100b957600080fd5b806340658a741461006c5780636f928aa714610095575b600080fd5b61008261007a3660046100ed565b600092915050565b6040519081526020015b60405180910390f35b606060405161008c9190610117565b6100b76100b2366004610183565b505050565b005b6100826100c7366004610206565b60009392505050565b803567ffffffffffffffff811681146100e857600080fd5b919050565b6000806040838503121561010057600080fd5b610109836100d0565b946020939093013593505050565b600060208083528351808285015260005b8181101561014457858101830151858201604001528201610128565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b60008060006040848603121561019857600080fd5b6101a1846100d0565b9250602084013567ffffffffffffffff808211156101be57600080fd5b818601915086601f8301126101d257600080fd5b8135818111156101e157600080fd5b8760208285010111156101f357600080fd5b6020830194508093505050509250925092565b60008060006060848603121561021b57600080fd5b610224846100d0565b9560208501359550604090940135939250505056fea264697066735822122031dbc394294ddb7ff922e1d852851eb8e27e036421dc325a5b4816f7eb19972c64736f6c63430008140033","runtime-code":"0x608060405234801561001057600080fd5b50600436106100675760003560e01c806383389de71161005057806383389de7146100a4578063b376a688146100b9578063bf495c88146100b957600080fd5b806340658a741461006c5780636f928aa714610095575b600080fd5b61008261007a3660046100ed565b600092915050565b6040519081526020015b60405180910390f35b606060405161008c9190610117565b6100b76100b2366004610183565b505050565b005b6100826100c7366004610206565b60009392505050565b803567ffffffffffffffff811681146100e857600080fd5b919050565b6000806040838503121561010057600080fd5b610109836100d0565b946020939093013593505050565b600060208083528351808285015260005b8181101561014457858101830151858201604001528201610128565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b60008060006040848603121561019857600080fd5b6101a1846100d0565b9250602084013567ffffffffffffffff808211156101be57600080fd5b818601915086601f8301126101d257600080fd5b8135818111156101e157600080fd5b8760208285010111156101f357600080fd5b6020830194508093505050509250925092565b60008060006060848603121561021b57600080fd5b610224846100d0565b9560208501359550604090940135939250505056fea264697066735822122031dbc394294ddb7ff922e1d852851eb8e27e036421dc325a5b4816f7eb19972c64736f6c63430008140033","info":{"source":"// SPDX-License-Identifier: MIT\npragma solidity =0.8.20 ^0.8.0;\n\n// contracts/interfaces/IGasOracle.sol\n\ninterface IGasOracle {\n    /// @notice Convert a value from the native token of a remote chain to the local native token.\n    /// @dev Will revert if no price is available for the remote chain.\n    /// @param remoteChainId        The chain id of the remote chain.\n    /// @param value                The value to convert.\n    function convertRemoteValueToLocalUnits(uint64 remoteChainId, uint256 value) external view returns (uint256);\n\n    /// @notice Estimate the cost of execution a transaction on a remote chain,\n    /// and convert it to the local native token.\n    /// @dev Will revert if no price is available for the remote chain.\n    /// @param remoteChainId        The chain id of the remote chain.\n    /// @param gasLimit             The gas limit of the transaction.\n    /// @param calldataSize         The size of the transaction calldata.\n    function estimateTxCostInLocalUnits(\n        uint64 remoteChainId,\n        uint256 gasLimit,\n        uint256 calldataSize\n    )\n        external\n        view\n        returns (uint256);\n\n    /// @notice Estimate the cost of execution a transaction on a remote chain,\n    /// and return it as is in the remote chain's native token.\n    /// @dev Will revert if no price is available for the remote chain.\n    /// @param remoteChainId        The chain id of the remote chain.\n    /// @param gasLimit             The gas limit of the transaction.\n    /// @param calldataSize         The size of the transaction calldata.\n    function estimateTxCostInRemoteUnits(\n        uint64 remoteChainId,\n        uint256 gasLimit,\n        uint256 calldataSize\n    )\n        external\n        view\n        returns (uint256);\n}\n\n// contracts/interfaces/ISynapseGasOracle.sol\n\ninterface ISynapseGasOracle is IGasOracle {\n    /// @notice Allows Synapse Module to pass the gas data from a remote chain to the Gas Oracle.\n    /// @dev Could only be called by Synapse Module.\n    /// @param srcChainId        The chain id of the remote chain.\n    /// @param data              The gas data from the remote chain.\n    function receiveRemoteGasData(uint64 srcChainId, bytes calldata data) external;\n\n    /// @notice Gets the gas data for the local chain.\n    function getLocalGasData() external view returns (bytes memory);\n}\n\n// test/mocks/SynapseGasOracleMock.sol\n\n// solhint-disable no-empty-blocks\ncontract SynapseGasOracleMock is ISynapseGasOracle {\n    function receiveRemoteGasData(uint64 srcChainId, bytes calldata data) external {}\n\n    function getLocalGasData() external view returns (bytes memory) {}\n\n    function convertRemoteValueToLocalUnits(\n        uint64 remoteChainId,\n        uint256 value\n    )\n        external\n        view\n        override\n        returns (uint256)\n    {}\n\n    function estimateTxCostInLocalUnits(\n        uint64 remoteChainId,\n        uint256 gasLimit,\n        uint256 calldataSize\n    )\n        external\n        view\n        override\n        returns (uint256)\n    {}\n\n    function estimateTxCostInRemoteUnits(\n        uint64 remoteChainId,\n        uint256 gasLimit,\n        uint256 calldataSize\n    )\n        external\n        view\n        override\n        returns (uint256)\n    {}\n}\n","language":"Solidity","languageVersion":"0.8.20","compilerVersion":"0.8.20","compilerOptions":"--combined-json bin,bin-runtime,srcmap,srcmap-runtime,abi,userdoc,devdoc,metadata,hashes --optimize --optimize-runs 10000 --allow-paths ., ./, ../ --evm-version=istanbul","srcMap":"2436:823:0:-:0;;;;;;;;;;;;;;;;;;;","srcMapRuntime":"2436:823:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2652:178;;;;;;:::i;:::-;2815:7;2652:178;;;;;;;;593:25:1;;;581:2;566:18;2652:178:0;;;;;;;;2580:66;2630:12;2580:66;;;;;;:::i;2493:81::-;;;;;;:::i;:::-;;;;;;;3049:208;;;;;;:::i;:::-;3242:7;3049:208;;;;;;14:171:1;81:20;;141:18;130:30;;120:41;;110:69;;175:1;172;165:12;110:69;14:171;;;:::o;190:252::-;257:6;265;318:2;306:9;297:7;293:23;289:32;286:52;;;334:1;331;324:12;286:52;357:28;375:9;357:28;:::i;:::-;347:38;432:2;417:18;;;;404:32;;-1:-1:-1;;;190:252:1:o;629:605::-;739:4;768:2;797;786:9;779:21;829:6;823:13;872:6;867:2;856:9;852:18;845:34;897:1;907:140;921:6;918:1;915:13;907:140;;;1016:14;;;1012:23;;1006:30;982:17;;;1001:2;978:26;971:66;936:10;;907:140;;;911:3;1096:1;1091:2;1082:6;1071:9;1067:22;1063:31;1056:42;1225:2;1155:66;1150:2;1142:6;1138:15;1134:88;1123:9;1119:104;1115:113;1107:121;;;;629:605;;;;:::o;1239:663::-;1317:6;1325;1333;1386:2;1374:9;1365:7;1361:23;1357:32;1354:52;;;1402:1;1399;1392:12;1354:52;1425:28;1443:9;1425:28;:::i;:::-;1415:38;;1504:2;1493:9;1489:18;1476:32;1527:18;1568:2;1560:6;1557:14;1554:34;;;1584:1;1581;1574:12;1554:34;1622:6;1611:9;1607:22;1597:32;;1667:7;1660:4;1656:2;1652:13;1648:27;1638:55;;1689:1;1686;1679:12;1638:55;1729:2;1716:16;1755:2;1747:6;1744:14;1741:34;;;1771:1;1768;1761:12;1741:34;1816:7;1811:2;1802:6;1798:2;1794:15;1790:24;1787:37;1784:57;;;1837:1;1834;1827:12;1784:57;1868:2;1864;1860:11;1850:21;;1890:6;1880:16;;;;;1239:663;;;;;:::o;1907:320::-;1983:6;1991;1999;2052:2;2040:9;2031:7;2027:23;2023:32;2020:52;;;2068:1;2065;2058:12;2020:52;2091:28;2109:9;2091:28;:::i;:::-;2081:38;2166:2;2151:18;;2138:32;;-1:-1:-1;2217:2:1;2202:18;;;2189:32;;1907:320;-1:-1:-1;;;1907:320:1:o","abiDefinition":[{"inputs":[{"internalType":"uint64","name":"remoteChainId","type":"uint64"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"convertRemoteValueToLocalUnits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"remoteChainId","type":"uint64"},{"internalType":"uint256","name":"gasLimit","type":"uint256"},{"internalType":"uint256","name":"calldataSize","type":"uint256"}],"name":"estimateTxCostInLocalUnits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"remoteChainId","type":"uint64"},{"internalType":"uint256","name":"gasLimit","type":"uint256"},{"internalType":"uint256","name":"calldataSize","type":"uint256"}],"name":"estimateTxCostInRemoteUnits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLocalGasData","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"srcChainId","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"receiveRemoteGasData","outputs":[],"stateMutability":"nonpayable","type":"function"}],"userDoc":{"kind":"user","methods":{"convertRemoteValueToLocalUnits(uint64,uint256)":{"notice":"Convert a value from the native token of a remote chain to the local native token."},"estimateTxCostInLocalUnits(uint64,uint256,uint256)":{"notice":"Estimate the cost of execution a transaction on a remote chain, and convert it to the local native token."},"estimateTxCostInRemoteUnits(uint64,uint256,uint256)":{"notice":"Estimate the cost of execution a transaction on a remote chain, and return it as is in the remote chain's native token."},"getLocalGasData()":{"notice":"Gets the gas data for the local chain."},"receiveRemoteGasData(uint64,bytes)":{"notice":"Allows Synapse Module to pass the gas data from a remote chain to the Gas Oracle."}},"version":1},"developerDoc":{"kind":"dev","methods":{"convertRemoteValueToLocalUnits(uint64,uint256)":{"details":"Will revert if no price is available for the remote chain.","params":{"remoteChainId":"The chain id of the remote chain.","value":"The value to convert."}},"estimateTxCostInLocalUnits(uint64,uint256,uint256)":{"details":"Will revert if no price is available for the remote chain.","params":{"calldataSize":"The size of the transaction calldata.","gasLimit":"The gas limit of the transaction.","remoteChainId":"The chain id of the remote chain."}},"estimateTxCostInRemoteUnits(uint64,uint256,uint256)":{"details":"Will revert if no price is available for the remote chain.","params":{"calldataSize":"The size of the transaction calldata.","gasLimit":"The gas limit of the transaction.","remoteChainId":"The chain id of the remote chain."}},"receiveRemoteGasData(uint64,bytes)":{"details":"Could only be called by Synapse Module.","params":{"data":"The gas data from the remote chain.","srcChainId":"The chain id of the remote chain."}}},"version":1},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"remoteChainId\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"convertRemoteValueToLocalUnits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"remoteChainId\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"calldataSize\",\"type\":\"uint256\"}],\"name\":\"estimateTxCostInLocalUnits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"remoteChainId\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"calldataSize\",\"type\":\"uint256\"}],\"name\":\"estimateTxCostInRemoteUnits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLocalGasData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"srcChainId\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"receiveRemoteGasData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"convertRemoteValueToLocalUnits(uint64,uint256)\":{\"details\":\"Will revert if no price is available for the remote chain.\",\"params\":{\"remoteChainId\":\"The chain id of the remote chain.\",\"value\":\"The value to convert.\"}},\"estimateTxCostInLocalUnits(uint64,uint256,uint256)\":{\"details\":\"Will revert if no price is available for the remote chain.\",\"params\":{\"calldataSize\":\"The size of the transaction calldata.\",\"gasLimit\":\"The gas limit of the transaction.\",\"remoteChainId\":\"The chain id of the remote chain.\"}},\"estimateTxCostInRemoteUnits(uint64,uint256,uint256)\":{\"details\":\"Will revert if no price is available for the remote chain.\",\"params\":{\"calldataSize\":\"The size of the transaction calldata.\",\"gasLimit\":\"The gas limit of the transaction.\",\"remoteChainId\":\"The chain id of the remote chain.\"}},\"receiveRemoteGasData(uint64,bytes)\":{\"details\":\"Could only be called by Synapse Module.\",\"params\":{\"data\":\"The gas data from the remote chain.\",\"srcChainId\":\"The chain id of the remote chain.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"convertRemoteValueToLocalUnits(uint64,uint256)\":{\"notice\":\"Convert a value from the native token of a remote chain to the local native token.\"},\"estimateTxCostInLocalUnits(uint64,uint256,uint256)\":{\"notice\":\"Estimate the cost of execution a transaction on a remote chain, and convert it to the local native token.\"},\"estimateTxCostInRemoteUnits(uint64,uint256,uint256)\":{\"notice\":\"Estimate the cost of execution a transaction on a remote chain, and return it as is in the remote chain's native token.\"},\"getLocalGasData()\":{\"notice\":\"Gets the gas data for the local chain.\"},\"receiveRemoteGasData(uint64,bytes)\":{\"notice\":\"Allows Synapse Module to pass the gas data from a remote chain to the Gas Oracle.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solidity/SynapseGasOracleMock.sol\":\"SynapseGasOracleMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"solidity/SynapseGasOracleMock.sol\":{\"keccak256\":\"0x28316f74c2b50cefc95a5f9916728d072bd344a5698921dd3989845a377a1e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd513482a3752b21948defbd0d8e253d25360bc96c13f9529b2cdb31ec343a52\",\"dweb:/ipfs/Qmc9GUg1uHKJDThBpfeXx4WgxfK6dXzBHzbz7Z21Nw3ETv\"]}},\"version\":1}"},"hashes":{"convertRemoteValueToLocalUnits(uint64,uint256)":"40658a74","estimateTxCostInLocalUnits(uint64,uint256,uint256)":"bf495c88","estimateTxCostInRemoteUnits(uint64,uint256,uint256)":"b376a688","getLocalGasData()":"6f928aa7","receiveRemoteGasData(uint64,bytes)":"83389de7"}}}